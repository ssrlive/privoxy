<!--
 File        :  doc/source/p-config.sgml

 Purpose     :  Used with other docs and files only.

 Copyright (C) 2001-2023 Privoxy Developers https://www.privoxy.org/
 See LICENSE.

 ========================================================================
 NOTE: Please read developer-manual/documentation.html before touching
 anything in this, or other Privoxy documentation.
 ========================================================================


 This file contains all the config file comments and options. It used to
 build both the user-manual config sections, and all of config (yes, the main
 config file) itself.

 Rationale: This is broken up into two files since a file with a prolog
 (DTD, etc) cannot be sourced as a secondary file. config.sgml is basically
 a wrapper for this file.

 IMPORTANT:

 OPTIONS: The actual options are included in this file and prefixed with
 '@@', and processed by the Makefile to strip the '@@'. Default options
 that should appear commented out should be listed as: '@@#OPTION'.
 Otherwise, as '@@OPTION'. Example:

  @@listen-address  127.0.0.1:8118

 The Makefile does significant other processing too. The final results
 should be checked to make sure that the perl processing does not
 fubar something!!! Makefile processing requires w3m, fmt (shell line
 formatter), and perl.


 This file is included into:

   user-manual.sgml
   config   (the actual Privoxy config file)

-->

<![%user-man;[
<!-- This part only goes into user-manual -->
<sect1 id="config">
<title>The Main Configuration File</title>

<para>
 By default, the main configuration file is named <filename>config</filename>,
 with the exception of Windows, where it is named <filename>config.txt</filename>.
 Configuration lines consist of an initial keyword followed by a list of
 values, all separated by whitespace (any number of spaces or tabs). For
 example:
</para>

<literallayout>
  <emphasis>confdir /etc/privoxy</emphasis>
</literallayout>

<para>
 Assigns the value <literal>/etc/privoxy</literal> to the option
 <literal>confdir</literal> and thus indicates that the configuration
 directory is named <quote>/etc/privoxy/</quote>.
</para>

<para>
 All options in the config file except for <literal>confdir</literal> and
 <literal>logdir</literal> are optional. Watch out in the below description
 for what happens if you leave them unset.
</para>

<para>
 The main config file controls all aspects of <application>Privoxy</application>'s
 operation that are not location dependent (i.e. they apply universally, no matter
 where you may be surfing). Like the filter and action files, the config file is
 a plain text file and can be modified with a text editor like emacs, vim or
 notepad.exe.
</para>

]]>


<![%config-file;[
<!-- This part only goes into the config file -->
<sect1 id="config">
<title>
 @@TITLE<!-- between the @@ is stripped by Makefile -->@@
 Sample Configuration File for Privoxy &p-version;
</title>
<para>
Copyright (C) 2001-2023 Privoxy Developers https://www.privoxy.org/
</para>

<literallayout>
##################################################################
                                                                 #
                    Table of Contents                            #
                                                                 #
      I. INTRODUCTION                                            #
     II. FORMAT OF THE CONFIGURATION FILE                        #
                                                                 #
      1. LOCAL SET-UP DOCUMENTATION                              #
      2. CONFIGURATION AND LOG FILE LOCATIONS                    #
      3. DEBUGGING                                               #
      4. ACCESS CONTROL AND SECURITY                             #
      5. FORWARDING                                              #
      6. MISCELLANEOUS                                           #
      7. HTTPS INSPECTION                                        #
      8. WINDOWS GUI OPTIONS                                     #
                                                                 #
##################################################################


I. INTRODUCTION
 ===============
</literallayout>

<para>
 This file holds Privoxy's main configuration.  Privoxy detects
 configuration changes automatically, so you don't have to restart it
 unless you want to load a different configuration file.
</para>
<para>
 The configuration will be reloaded with the first request after the
 change was done, this request itself will still use the old configuration,
 though. In other words: it takes two requests before you see the result of
 your changes. Requests that are dropped due to ACL don't trigger reloads.
</para>
<para>
 When starting Privoxy on Unix systems, give the location of this
 file as last argument.  On Windows systems, Privoxy will look for
 this file with the name 'config.txt' in the current working directory
 of the Privoxy process.
</para>

<para>
 <literallayout><!-- funky spacing -->

II. FORMAT OF THE CONFIGURATION FILE
====================================</literallayout>
</para>
<para>
 Configuration lines consist of an initial keyword followed by a list
 of values, all separated by whitespace (any number of spaces or
 tabs).  For example,
</para>
<para>
 actionsfile default.action
</para>
<para>
 Indicates that the actionsfile is named 'default.action'.
</para>
<para>
 The '#' indicates a comment.  Any part of a line following a '#' is
 ignored, except if the '#' is preceded by a '\'.
</para>
<para>
 Thus, by placing a # at the start of an existing configuration line,
 you can make it a comment and it will be treated as if it weren't there.
 This is called "commenting out" an option and can be useful. Removing
 the # again is called "uncommenting".
</para>
<para>
 Note that commenting out an option and leaving it at its default
 are two completely different things! Most options behave very
 differently when unset. See the "Effect if unset" explanation
 in each option's description for details.
</para>
<para>
 Long lines can be continued on the next line by using a `\' as
 the last character.
</para>

]]>

<!-- ************************************************ -->
<!-- The following is common to both outputs (mostly) -->
<!-- ************************************************ -->



<!--   ~~~~~       New section      ~~~~~     -->
<sect2 id="local-set-up">
<title>Local Set-up Documentation</title>

  <para>
    If you intend to operate <application>Privoxy</application> for more users
    than just yourself, it might be a good idea to let them know how to reach
    you, what you block and why you do that, your policies, etc.
   </para>


<!--   ~~~~~       New section      ~~~~~     -->
<sect3 renderas="sect4" id="user-manual"><title>user-manual</title>
<variablelist>
 <varlistentry>
  <term>Specifies:</term>
  <listitem>
   <para>
    Location of the <application>Privoxy</application> User Manual.
   </para>
  </listitem>
 </varlistentry>
 <varlistentry>
  <term>Type of value:</term>
  <listitem>
   <para>A fully qualified URI</para>
  </listitem>
 </varlistentry>
 <varlistentry>
  <term>Default value:</term>
  <listitem>
   <para><emphasis>Unset</emphasis></para>
  </listitem>
 </varlistentry>
 <varlistentry>
  <term>Effect if unset:</term>
  <listitem>
   <para>
    <ulink url="https://www.privoxy.org/user-manual/">https://www.privoxy.org/<replaceable class="parameter">version</replaceable>/user-manual/</ulink>
    will be used, where <replaceable class="parameter">version</replaceable> is the <application>Privoxy</application> version.
   </para>
  </listitem>
 </varlistentry>
 <varlistentry>
  <term>Notes:</term>
  <listitem>
    <para>
    The User Manual URI is the single best source of information on
    <application>Privoxy</application>, and is used for help links from some
    of the internal CGI pages. The manual itself is normally packaged with the
    binary distributions, so you probably want to set this to a locally
    installed copy.
   </para>
   <para>
    Examples:
   </para>
  <!--
  <para>
   Unix, in local filesystem (may not work with all browsers):
  </para>
  <screen>user-manual  file:///usr/share/doc/privoxy-&p-version;/user-manual/</screen>
  <para>
   Windows, in local filesystem, <emphasis>must</emphasis> use forward slash notation:
  </para>
  <screen>user-manual  file:/c:/some-dir/privoxy-&p-version;/user-manual/</screen>
  <para>
   Windows, UNC notation (with forward slashes):
  </para>
  <screen>user-manual  file://///some-server/some-path/privoxy-&p-version;/user-manual/</screen>
 -->
  <para>
   The best all purpose solution is simply to put the full local
   <literal>PATH</literal> to where the <citetitle>User Manual</citetitle> is
   located:
  </para>
  <screen>user-manual  /usr/share/doc/privoxy/user-manual</screen>
  <para>
   The User Manual is then available to anyone with access to
   <application>Privoxy</application>, by following the built-in URL:
   <literal>http://config.privoxy.org/user-manual/</literal>
   (or the shortcut: <literal>http://p.p/user-manual/</literal>).
  </para>
  <para>
   If the documentation is not on the local system, it can be accessed
   from a remote server, as:
  </para>
  <screen>user-manual  http://example.com/privoxy/user-manual/</screen>
  <![%user-man;[
   <!-- this gets hammered in conversion to config. Text repeated below. -->
  <warning>
   <para>
     If set, this option should be <emphasis>the first option in the config
     file</emphasis>, because it is used while the config file is being read
     on start-up.
   </para>
  </warning>
  ]]>

  <![%config-file;[
   <!-- alternate -->
   <para>
    WARNING!!!
   </para>
   <blockquote>
    <para>
     If set, this option should be the first option in the config
     file, because it is used while the config file is being read.
    </para>
   </blockquote>
  ]]>

 </listitem>
 </varlistentry>
</variablelist>

<![%config-file;[<literallayout>@@#user-manual https://www.privoxy.org/user-manual/</literallayout>]]>
</sect3>


<!--   ~~~~~       New section      ~~~~~     -->
<sect3 renderas="sect4" id="trust-info-url"><title>trust-info-url</title>

<variablelist>
 <varlistentry>
  <term>Specifies:</term>
  <listitem>
   <para>
    A URL to be displayed in the error page that users will see if access to an untrusted page is denied.
   </para>
  </listitem>
 </varlistentry>
 <varlistentry>
  <term>Type of value:</term>
  <listitem>
   <para>URL</para>
  </listitem>
 </varlistentry>
 <varlistentry>
  <term>Default value:</term>
  <listitem>
   <para><emphasis>Unset</emphasis></para>
  </listitem>
 </varlistentry>
 <varlistentry>
  <term>Effect if unset:</term>
  <listitem>
   <para>
    No links are displayed on the "untrusted" error page.
   </para>
  </listitem>
 </varlistentry>
 <varlistentry>
  <term>Notes:</term>
  <listitem>
   <para>
    The value of this option only matters if the trust mechanism has been
    activated. (See <link linkend="trustfile"><emphasis>trustfile</emphasis></link> below.)
   </para>
   <para>
    If you use the trust mechanism, it is a good idea to write up some on-line
    documentation about your trust policy and to specify the URL(s) here.
    Use multiple times for multiple URLs.
   </para>
   <para>
    The URL(s) should be added to the trustfile as well, so users don't end up
    locked out from the information on why they were locked out in the first place!
   </para>
  </listitem>
 </varlistentry>
</variablelist>

<![%config-file;[<literallayout>@@#trust-info-url  http://www.example.com/why_we_block.html</literallayout>]]>
<![%config-file;[<literallayout>@@#trust-info-url  http://www.example.com/what_we_allow.html</literallayout>]]>
</sect3>


<!--   ~~~~~       New section      ~~~~~     -->
<sect3 renderas="sect4" id="admin-address"><title>admin-address</title>

<variablelist>
 <varlistentry>
  <term>Specifies:</term>
  <listitem>
   <para>
    An email address to reach the <application>Privoxy</application> administrator.
   </para>
  </listitem>
 </varlistentry>
 <varlistentry>
  <term>Type of value:</term>
  <listitem>
   <para>Email address</para>
  </listitem>
 </varlistentry>
 <varlistentry>
  <term>Default value:</term>
  <listitem>
   <para><emphasis>Unset</emphasis></para>
  </listitem>
 </varlistentry>
 <varlistentry>
  <term>Effect if unset:</term>
  <listitem>
   <para>
    No email address is displayed on error pages and the CGI user interface.
   </para>
  </listitem>
 </varlistentry>
 <varlistentry>
  <term>Notes:</term>
  <listitem>
   <para>
    If both <literal>admin-address</literal> and <literal>proxy-info-url</literal>
    are unset, the whole "Local Privoxy Support" box on all generated pages will
    not be shown.
   </para>
  </listitem>
 </varlistentry>
</variablelist>

<![%config-file;[<literallayout>@@#admin-address privoxy-admin@example.com</literallayout>]]>
</sect3>


<!--   ~~~~~       New section      ~~~~~     -->
<sect3 renderas="sect4" id="proxy-info-url"><title>proxy-info-url</title>

<variablelist>
 <varlistentry>
  <term>Specifies:</term>
  <listitem>
   <para>
    A URL to documentation about the local <application>Privoxy</application> setup,
    configuration or policies.
   </para>
  </listitem>
 </varlistentry>
 <varlistentry>
  <term>Type of value:</term>
  <listitem>
   <para>URL</para>
  </listitem>
 </varlistentry>
 <varlistentry>
  <term>Default value:</term>
  <listitem>
   <para><emphasis>Unset</emphasis></para>
  </listitem>
 </varlistentry>
 <varlistentry>
  <term>Effect if unset:</term>
  <listitem>
   <para>
    No link to local documentation is displayed on error pages and the CGI user interface.
   </para>
  </listitem>
 </varlistentry>
 <varlistentry>
  <term>Notes:</term>
  <listitem>
   <para>
    If both <literal>admin-address</literal> and <literal>proxy-info-url</literal>
    are unset, the whole "Local Privoxy Support" box on all generated pages will
    not be shown.
   </para>
   <para>
    This URL shouldn't be blocked ;-)
   </para>
  </listitem>
 </varlistentry>
</variablelist>

<![%config-file;[<literallayout>@@#proxy-info-url http://www.example.com/proxy-service.html</literallayout>]]>
</sect3>

</sect2>
<!--  ~  End section  ~  -->



<!--   ~~~~~       New section      ~~~~~     -->

<sect2 id="conf-log-loc">
<title>Configuration and Log File Locations</title>

<para>
 <application>Privoxy</application> can (and normally does) use a number of
 other files for additional configuration, help and logging.
 This section of the configuration file tells <application>Privoxy</application>
 where to find those other files.
</para>

<para>
 The user running <application>Privoxy</application>, must have read
 permission for all configuration files, and write permission to any files
 that would be modified, such as log files and actions files.
</para>


<!--   ~~~~~       New section      ~~~~~     -->
<sect3 renderas="sect4" id="confdir"><title>confdir</title>

<variablelist>
 <varlistentry>
  <term>Specifies:</term>
  <listitem>
   <para>The directory where the other configuration files are located.</para>
  </listitem>
 </varlistentry>
 <varlistentry>
  <term>Type of value:</term>
  <listitem>
   <para>Path name</para>
  </listitem>
 </varlistentry>
 <varlistentry>
  <term>Default value:</term>
  <listitem>
   <para>/etc/privoxy (Unix) <emphasis>or</emphasis> <application>Privoxy</application> installation dir (Windows) </para>
  </listitem>
 </varlistentry>
 <varlistentry>
  <term>Effect if unset:</term>
  <listitem>
   <para><emphasis>Mandatory</emphasis></para>
  </listitem>
 </varlistentry>
 <varlistentry>
  <term>Notes:</term>
  <listitem>
   <para>
    No trailing <quote><literal>/</literal></quote>, please.
   </para>
  </listitem>
 </varlistentry>
</variablelist>

<![%config-file;[<literallayout>@@confdir .</literallayout>]]>
</sect3>

<!--   ~~~~~       New section      ~~~~~     -->
<sect3 renderas="sect4" id="templdir"><title>templdir</title>

<variablelist>
 <varlistentry>
  <term>Specifies:</term>
  <listitem>
   <para>An alternative directory where the templates are loaded from.</para>
  </listitem>
 </varlistentry>
 <varlistentry>
  <term>Type of value:</term>
  <listitem>
   <para>Path name</para>
  </listitem>
 </varlistentry>
 <varlistentry>
  <term>Default value:</term>
  <listitem>
   <para>unset</para>
  </listitem>
 </varlistentry>
 <varlistentry>
  <term>Effect if unset:</term>
  <listitem>
   <para>The templates are assumed to be located in confdir/template.</para>
  </listitem>
 </varlistentry>
 <varlistentry>
  <term>Notes:</term>
  <listitem>
   <para>
    <application>Privoxy's</application> original templates are usually
    overwritten with each update. Use this option to relocate customized
    templates that should be kept. As template variables might change
    between updates, you shouldn't expect templates to work with
    <application>Privoxy</application> releases other than the one
    they were part of, though.
   </para>
  </listitem>
 </varlistentry>
</variablelist>

<![%config-file;[<literallayout>@@#templdir .</literallayout>]]>
</sect3>


<!--   ~~~~~       New section      ~~~~~     -->
<sect3 renderas="sect4" id="temporary-directory"><title>temporary-directory</title>

<variablelist>
 <varlistentry>
  <term>Specifies:</term>
  <listitem>
   <para>A directory where Privoxy can create temporary files.</para>
  </listitem>
 </varlistentry>
 <varlistentry>
  <term>Type of value:</term>
  <listitem>
   <para>Path name</para>
  </listitem>
 </varlistentry>
 <varlistentry>
  <term>Default value:</term>
  <listitem>
   <para>unset</para>
  </listitem>
 </varlistentry>
 <varlistentry>
  <term>Effect if unset:</term>
  <listitem>
   <para>No temporary files are created, external filters don't work.</para>
  </listitem>
 </varlistentry>
 <varlistentry>
  <term>Notes:</term>
  <listitem>
   <para>
    To execute <literal><ulink url="actions-file.html#EXTERNAL-FILTER">external filters</ulink></literal>,
    <application>Privoxy</application> has to create temporary files.
    This directive specifies the directory the temporary files should
    be written to.
   </para>
   <para>
    It should be a directory only <application>Privoxy</application>
    (and trusted users) can access.
   </para>
  </listitem>
 </varlistentry>
</variablelist>

<![%config-file;[<literallayout>@@#temporary-directory .</literallayout>]]>
</sect3>


<!--   ~~~~~       New section      ~~~~~     -->
<sect3 renderas="sect4" id="logdir"><title>logdir</title>

<variablelist>
 <varlistentry>
  <term>Specifies:</term>
  <listitem>
   <para>
    The directory where all logging takes place
    (i.e. where the <filename>logfile</filename> is located).
   </para>
  </listitem>
 </varlistentry>
 <varlistentry>
  <term>Type of value:</term>
  <listitem>
   <para>Path name</para>
  </listitem>
 </varlistentry>
 <varlistentry>
  <term>Default value:</term>
  <listitem>
   <para>/var/log/privoxy (Unix) <emphasis>or</emphasis> <application>Privoxy</application> installation dir (Windows) </para>
  </listitem>
 </varlistentry>
 <varlistentry>
  <term>Effect if unset:</term>
  <listitem>
   <para><emphasis>Mandatory</emphasis></para>
  </listitem>
 </varlistentry>
 <varlistentry>
  <term>Notes:</term>
  <listitem>
   <para>
    No trailing <quote><literal>/</literal></quote>, please.
   </para>
  </listitem>
 </varlistentry>
</variablelist>

<![%config-file;[<literallayout>@@logdir .</literallayout>]]>
</sect3>


<!--   ~~~~~       New section      ~~~~~     -->
<sect3 renderas="sect4" id="actionsfile"><title>
actionsfile
</title>
<anchor id="default.action">
<anchor id="standard.action">
<anchor id="user.action">
<!-- Note: slightly modified this section 04/28/02, hal. See NOTE. -->
<variablelist>
 <varlistentry>
  <term>Specifies:</term>
  <listitem>
   <para>
    The <link linkend="actions-file">actions file(s)</link> to use
   </para>
  </listitem>
 </varlistentry>
 <varlistentry>
  <term>Type of value:</term>
  <listitem>
   <para>Complete file name, relative to <literal>confdir</literal></para>
  </listitem>
 </varlistentry>
 <varlistentry>
  <term>Default values:</term>
  <listitem>
   <simplelist>
    <member>
     <msgtext><literallayout>  match-all.action # Actions that are applied to all sites and maybe overruled later on.</literallayout></msgtext>
    </member>
    <member>
     <msgtext><literallayout>  default.action   # Main actions file</literallayout></msgtext>
    </member>
    <member>
     <msgtext><literallayout>  user.action      # User customizations</literallayout></msgtext>
    </member>
   </simplelist>
  </listitem>
 </varlistentry>
 <varlistentry>
  <term>Effect if unset:</term>
  <listitem>
   <para>
    No actions are taken at all. More or less neutral proxying.
   </para>
  </listitem>
 </varlistentry>
 <varlistentry>
  <term>Notes:</term>
  <listitem>
   <para>
    Multiple <literal>actionsfile</literal> lines are permitted, and are in fact recommended!
   </para>
   <para>
    The default values are <filename>default.action</filename>, which is the
    <quote>main</quote> actions file maintained by the developers, and
    <filename>user.action</filename>, where you can make your personal additions.
   </para>
   <para>
    Actions files contain all the per site and per URL configuration for
    ad blocking, cookie management, privacy considerations, etc.
   </para>
  </listitem>
 </varlistentry>
</variablelist>

<!-- NOTE: alternate markup to make a simpler list doesn't work due to -->
<!-- html -> text conversion, blah -->
<![%config-file;[<literallayout>@@actionsfile match-all.action # Actions that are applied to all sites and maybe overruled later on.</literallayout>]]>
<![%config-file;[<literallayout>@@actionsfile default.action   # Main actions file</literallayout>]]>
<!--
 XXX: Like user.filter, user.action should probably be commented out
 by default as not all packages install it into the default directory.
 fk 2007-11-07
-->
<![%config-file;[<literallayout>@@actionsfile user.action      # User customizations</literallayout>]]>
<![%config-file;[<literallayout>@@#actionsfile regression-tests.action     # Tests for privoxy-regression-test</literallayout>]]>
</sect3>

<!--   ~~~~~       New section      ~~~~~     -->
<sect3 renderas="sect4" id="filterfile"><title>filterfile</title>
<anchor id="default.filter">
<variablelist>
 <varlistentry>
  <term>Specifies:</term>
  <listitem>
   <para>
    The <link linkend="filter-file">filter file(s)</link> to use
   </para>
  </listitem>
 </varlistentry>
 <varlistentry>
  <term>Type of value:</term>
  <listitem>
   <para>File name, relative to <literal>confdir</literal></para>
  </listitem>
 </varlistentry>
 <varlistentry>
  <term>Default value:</term>
  <listitem>
   <para>default.filter (Unix) <emphasis>or</emphasis> default.filter.txt (Windows)</para>
  </listitem>
 </varlistentry>
 <varlistentry>
  <term>Effect if unset:</term>
  <listitem>
   <para>
    No textual content filtering takes place, i.e. all
    <literal>+<link linkend="filter">filter</link>{<replaceable class="parameter">name</replaceable>}</literal>
    actions in the actions files are turned neutral.
   </para>
  </listitem>
 </varlistentry>
 <varlistentry>
  <term>Notes:</term>
  <listitem>
   <para>
    Multiple <literal>filterfile</literal> lines are permitted.
   </para>
   <para>
    The <link linkend="filter-file">filter files</link> contain content modification
    rules that use <link linkend="regex">regular expressions</link>. These rules permit
    powerful changes on the content of Web pages, and optionally the headers
    as well, e.g., you could try to disable your favorite JavaScript annoyances,
    re-write the actual displayed text, or just have some fun
    playing buzzword bingo with web pages.
   </para>
   <para>
    The
    <literal>+<link linkend="filter">filter</link>{<replaceable class="parameter">name</replaceable>}</literal>
    actions rely on the relevant filter (<replaceable class="parameter">name</replaceable>)
    to be defined in a filter file!
   </para>
   <para>
    A pre-defined filter file called <filename>default.filter</filename> that contains
    a number of useful filters for common problems is included in the distribution.
    See the section on the <literal><link linkend="filter">filter</link></literal>
    action for a list.
   </para>
   <para>
    It is recommended to place any locally adapted filters into a separate
    file, such as <filename>user.filter</filename>.
   </para>
  </listitem>
 </varlistentry>
</variablelist>

<![%config-file;[<literallayout>@@filterfile default.filter</literallayout>]]>
<![%config-file;[<literallayout>@@filterfile user.filter      # User customizations</literallayout>]]>
</sect3>


<!--   ~~~~~       New section      ~~~~~     -->
<sect3 renderas="sect4" id="logfile"><title>logfile</title>

<variablelist>
 <varlistentry>
  <term>Specifies:</term>
  <listitem>
   <para>
    The log file to use
   </para>
  </listitem>
 </varlistentry>
 <varlistentry>
  <term>Type of value:</term>
  <listitem>
   <para>File name, relative to <literal>logdir</literal></para>
  </listitem>
 </varlistentry>
 <varlistentry>
  <term>Default value:</term>
  <listitem>
   <para><emphasis>Unset (commented out)</emphasis>. When activated: logfile (Unix) <emphasis>or</emphasis> privoxy.log (Windows).</para>
  </listitem>
 </varlistentry>
 <varlistentry>
  <term>Effect if unset:</term>
  <listitem>
   <para>
    No logfile is written.
   </para>
  </listitem>
 </varlistentry>
 <varlistentry>
  <term>Notes:</term>
  <listitem>
   <para>
    The logfile is where all logging and error messages are written. The level
    of detail and number of messages are set with the <literal>debug</literal>
    option (see below). The logfile can be useful for tracking down a problem with
    <application>Privoxy</application> (e.g., it's not blocking an ad you
    think it should block) and it can help you to monitor what your browser
    is doing.
   </para>
   <para>
    Depending on the debug options below, the logfile may be a privacy risk
    if third parties can get access to it. As most users will never look
    at it, <application>Privoxy</application> only logs fatal errors by default.
   </para>
   <para>
    For most troubleshooting purposes, you will have to change that,
    please refer to the debugging section for details.
   </para>
   <para>
    Any log files must be writable by whatever user <application>Privoxy</application>
    is being run as (on Unix, default user id is <quote>privoxy</quote>).
   </para>
   <para>
    To prevent the logfile from growing indefinitely, it is recommended to
    periodically rotate or shorten it. Many operating systems support log
    rotation out of the box, some require additional software to do it.
    For details, please refer to the documentation for your operating system.
   </para>
  </listitem>
 </varlistentry>
</variablelist>

<![%config-file;[<literallayout>@@logfile logfile</literallayout>]]>
</sect3>


<!--   ~~~~~       New section      ~~~~~     -->
<sect3 renderas="sect4" id="trustfile"><title>trustfile</title>
<variablelist>
 <varlistentry>
  <term>Specifies:</term>
  <listitem>
   <para>
    The name of the trust file to use
   </para>
  </listitem>
 </varlistentry>
 <varlistentry>
  <term>Type of value:</term>
  <listitem>
   <para>File name, relative to <literal>confdir</literal></para>
  </listitem>
 </varlistentry>
 <varlistentry>
  <term>Default value:</term>
  <listitem>
   <para><emphasis>Unset (commented out)</emphasis>. When activated: trust (Unix) <emphasis>or</emphasis> trust.txt (Windows)</para>
  </listitem>
 </varlistentry>
 <varlistentry>
  <term>Effect if unset:</term>
  <listitem>
   <para>
    The entire trust mechanism is disabled.
   </para>
  </listitem>
 </varlistentry>
 <varlistentry>
  <term>Notes:</term>
  <listitem>
   <para>
    The trust mechanism is an experimental feature for building white-lists and should
    be used with care. It is <emphasis>NOT</emphasis> recommended for the casual user.
   </para>
   <para>
    If you specify a trust file, <application>Privoxy</application> will only allow
    access to sites that are specified in the trustfile. Sites can be listed
    in one of two ways:
   </para>
   <para>
    Prepending a <literal>~</literal> character limits access to this site
    only (and any sub-paths within this site), e.g.
    <literal>~www.example.com</literal> allows access to
    <literal>~www.example.com/features/news.html</literal>, etc.
   </para>
   <para>
    Or, you can designate sites as <emphasis>trusted referrers</emphasis>, by
    prepending the name with a <literal>+</literal> character. The effect is that
    access to untrusted sites will be granted -- but only if a link from this
    trusted referrer was used to get there. The link target will then be added
    to the <quote>trustfile</quote> so that future, direct accesses will be
    granted. Sites added via this mechanism do not become trusted referrers
    themselves (i.e. they are added with a <literal>~</literal> designation).
    There is a limit of 512 such entries, after which new entries will not be
    made.
   </para>
   <para>
    If you use the <literal>+</literal> operator in the trust file, it may grow
    considerably over time.
   </para>
   <para>
    It is recommended that <application>Privoxy</application> be compiled with
    the <literal>--disable-force</literal>, <literal>--disable-toggle</literal> and
    <literal> --disable-editor</literal> options, if this feature is to be
    used.
   </para>
   <para>
    Possible applications include limiting Internet access for children.
   </para>

  </listitem>
 </varlistentry>
</variablelist>

<![%config-file;[<literallayout>@@#trustfile trust</literallayout>]]>
</sect3>
</sect2>

<!--  ~  End section  ~  -->

<!--   ~~~~~       New section      ~~~~~     -->
<sect2 id="debugging">
<title>Debugging</title>

 <para>
  These options are mainly useful when tracing a problem.
  Note that you might also want to invoke
  <application>Privoxy</application> with the <literal>--no-daemon</literal>
  command line option when debugging.
 </para>

<sect3 renderas="sect4" id="debug"><title>debug</title>

<variablelist>
 <varlistentry>
  <term>Specifies:</term>
  <listitem>
   <para>
    Key values that determine what information gets logged.
   </para>
  </listitem>
 </varlistentry>
 <varlistentry>
  <term>Type of value:</term>
  <listitem>
   <para>Integer values</para>
  </listitem>
 </varlistentry>
 <varlistentry>
  <term>Default value:</term>
  <listitem>
   <para>0 (i.e.: only fatal errors (that cause Privoxy to exit) are logged)</para>
  </listitem>
 </varlistentry>
 <varlistentry>
  <term>Effect if unset:</term>
  <listitem>
   <para>
    Default value is used (see above).
   </para>
  </listitem>
 </varlistentry>
 <varlistentry>
  <term>Notes:</term>
  <listitem>
   <para>
    The available debug levels are:
   </para>
    <programlisting>
debug     1 # Log the destination for each request. See also debug 1024.
debug     2 # show each connection status
debug     4 # show tagging-related messages
debug     8 # show header parsing
debug    16 # log all data written to the network
debug    32 # debug force feature
debug    64 # debug regular expression filters
debug   128 # debug redirects
debug   256 # debug GIF de-animation
debug   512 # Common Log Format
debug  1024 # Log the destination for requests &my-app; didn't let through, and the reason why.
debug  2048 # CGI user interface
debug  4096 # Startup banner and warnings.
debug  8192 # Non-fatal errors
debug 32768 # log all data read from the network
debug 65536 # Log the applying actions
</programlisting>
   <para>
    To select multiple debug levels, you can either add them or use
    multiple <literal>debug</literal> lines.
   </para>
   <para>
    A debug level of 1 is informative because it will show you each request
    as it happens. <emphasis>1, 1024, 4096 and 8192 are recommended</emphasis>
    so that you will notice when things go wrong. The other levels are
    probably only of interest if you are hunting down a specific problem.
    They can produce a lot of output (especially 16).
   </para>
   <para>
    If you are used to the more verbose settings, simply enable the debug lines
    below again.
   </para>
   <para>
    If you want to use pure CLF (Common Log Format), you should set <quote>debug
    512</quote> <emphasis>ONLY</emphasis> and not enable anything else.
   </para>
   <para>
    <application>Privoxy</application> has a hard-coded limit for the
    length of log messages. If it's reached, messages are logged truncated
    and marked with <quote>... [too long, truncated]</quote>.
   </para>
   <para>
    Please don't file any support requests without trying to reproduce
    the problem with increased debug level first. Once you read the log
    messages, you may even be able to solve the problem on your own.
   </para>
  </listitem>
 </varlistentry>
</variablelist>

<![%config-file;[<literallayout>@@#debug     1 # Log the destination for each request. See also debug 1024.</literallayout>]]>
<![%config-file;[<literallayout>@@#debug     2 # show each connection status</literallayout>]]>
<![%config-file;[<literallayout>@@#debug     4 # show tagging-related messages</literallayout>]]>
<![%config-file;[<literallayout>@@#debug     8 # show header parsing</literallayout>]]>
<![%config-file;[<literallayout>@@#debug   128 # debug redirects</literallayout>]]>
<![%config-file;[<literallayout>@@#debug   256 # debug GIF de-animation</literallayout>]]>
<![%config-file;[<literallayout>@@#debug   512 # Common Log Format</literallayout>]]>
<![%config-file;[<literallayout>@@#debug  1024 # Log the destination for requests &my-app; didn't let through, and the reason why.</literallayout>]]>
<![%config-file;[<literallayout>@@#debug  4096 # Startup banner and warnings</literallayout>]]>
<![%config-file;[<literallayout>@@#debug  8192 # Non-fatal errors</literallayout>]]>
<![%config-file;[<literallayout>@@#debug 65536 # Log applying actions</literallayout>]]>
</sect3>


<!--   ~~~~~       New section      ~~~~~     -->
<sect3 renderas="sect4" id="single-threaded"><title>single-threaded</title>

<variablelist>
 <varlistentry>
  <term>Specifies:</term>
  <listitem>
   <para>
    Whether to run only one server thread.
   </para>
  </listitem>
 </varlistentry>
 <varlistentry>
  <term>Type of value:</term>
  <listitem>
   <para><emphasis>1 or 0</emphasis></para>
  </listitem>
 </varlistentry>
 <varlistentry>
  <term>Default value:</term>
  <listitem>
   <para><emphasis>0</emphasis></para>
  </listitem>
 </varlistentry>
 <varlistentry>
  <term>Effect if unset:</term>
  <listitem>
   <para>
    Multi-threaded (or, where unavailable: forked) operation, i.e. the ability to
    serve multiple requests simultaneously.
   </para>
  </listitem>
 </varlistentry>
 <varlistentry>
  <term>Notes:</term>
  <listitem>
   <para>
    This option is only there for debugging purposes.
    <emphasis>It will drastically reduce performance.</emphasis>
   </para>
  </listitem>
 </varlistentry>
</variablelist>

<![%config-file;[<literallayout>@@#single-threaded 1</literallayout>]]>
</sect3>

<!--   ~~~~~       New section      ~~~~~     -->
<sect3 renderas="sect4" id="hostname"><title>hostname</title>

<variablelist>
 <varlistentry>
  <term>Specifies:</term>
  <listitem>
   <para>
    The hostname shown on the CGI pages.
   </para>
  </listitem>
 </varlistentry>
 <varlistentry>
  <term>Type of value:</term>
  <listitem>
   <para>Text</para>
  </listitem>
 </varlistentry>
 <varlistentry>
  <term>Default value:</term>
  <listitem>
   <para><emphasis>Unset</emphasis></para>
  </listitem>
 </varlistentry>
 <varlistentry>
  <term>Effect if unset:</term>
  <listitem>
   <para>
    The hostname provided by the operating system is used.
   </para>
  </listitem>
 </varlistentry>
 <varlistentry>
  <term>Notes:</term>
  <listitem>
   <para>
    On some misconfigured systems resolving the hostname fails or
    takes too much time and slows Privoxy down. Setting a fixed hostname
    works around the problem.
   </para>
   <para>
    In other circumstances it might be desirable to show a hostname
    other than the one returned by the operating system. For example
    if the system has several different hostnames and you don't want
    to use the first one.
   </para>
   <para>
    Note that Privoxy does not validate the specified hostname value.
   </para>
  </listitem>
 </varlistentry>
</variablelist>

<![%config-file;[<literallayout>@@#hostname hostname.example.org</literallayout>]]>
</sect3>

</sect2>

<!--  ~  End section  ~  -->


<!--   ~~~~~       New section      ~~~~~     -->
<sect2 id="access-control">
<title>Access Control and Security</title>

 <para>
  This section of the config file controls the security-relevant aspects
  of <application>Privoxy</application>'s configuration.
 </para>


<!--   ~~~~~       New section      ~~~~~     -->
<sect3 renderas="sect4" id="listen-address"><title>listen-address</title>

<variablelist>
 <varlistentry>
  <term>Specifies:</term>
  <listitem>
   <para>
    The address and TCP port on which <application>Privoxy</application> will
    listen for client requests.
   </para>
  </listitem>
 </varlistentry>
 <varlistentry>
  <term>Type of value:</term>
  <listitem>
   <para>[<replaceable class="parameter">IP-Address</replaceable>]:<replaceable class="parameter">Port</replaceable></para>
   <para>[<replaceable class="parameter">Hostname</replaceable>]:<replaceable class="parameter">Port</replaceable></para>
  </listitem>
 </varlistentry>

 <varlistentry>
  <term>Default value:</term>
  <listitem>
   <para>127.0.0.1:8118</para>
  </listitem>
 </varlistentry>
 <varlistentry>
  <term>Effect if unset:</term>
  <listitem>
   <para>
    Bind to 127.0.0.1 (IPv4 localhost), port 8118. This is suitable and
    recommended for home users who run <application>Privoxy</application> on
    the same machine as their browser.
   </para>
  </listitem>
 </varlistentry>
 <varlistentry>
  <term>Notes:</term>
  <listitem>
   <para>
    You will need to configure your browser(s) to this proxy address and port.
   </para>
   <para>
    If you already have another service running on port 8118, or if you want to
    serve requests from other machines (e.g. on your local network) as well, you
    will need to override the default.
   </para>
   <para>
    You can use this statement multiple times to make
    <application>Privoxy</application> listen on more ports or more
    <abbrev>IP</abbrev> addresses. Suitable if your operating system does not
    support sharing <abbrev>IPv6</abbrev> and <abbrev>IPv4</abbrev> protocols
    on the same socket.
   </para>
   <para>
    If a hostname is used instead of an IP address, <application>Privoxy</application>
    will try to resolve it to an IP address and if there are multiple, use the first
    one returned.
   </para>
   <para>
    If the address for the hostname isn't already known on the system
    (for example because it's in /etc/hostname), this may result in DNS
    traffic.
   </para>
   <para>
    If the specified address isn't available on the system, or if the
    hostname can't be resolved, <application>Privoxy</application>
    will fail to start.
    On GNU/Linux, and other platforms that can listen on not yet assigned IP
    addresses, Privoxy will start and will listen on the specified
    address whenever the IP address is assigned to the system
   </para>
   <para>
    IPv6 addresses containing colons have to be quoted by brackets.
    They can only be used if <application>Privoxy</application> has
    been compiled with IPv6 support. If you aren't sure if your version
    supports it, have a look at
    <ulink url="http://config.privoxy.org/show-status">http://config.privoxy.org/show-status</ulink>.
   </para>
   <para>
    Some operating systems will prefer IPv6 to IPv4 addresses even if the
    system has no IPv6 connectivity which is usually not expected by the user.
    Some even rely on DNS to resolve localhost which mean the "localhost" address
    used may not actually be local.
   </para>
   <para>
    It is therefore recommended to explicitly configure the intended IP address
    instead of relying on the operating system, unless there's a strong reason not to.
   </para>
   <para>
    If you leave out the address, <application>Privoxy</application> will bind to all
    IPv4 interfaces (addresses) on your machine and may become reachable from the
    Internet and/or the local network. Be aware that some GNU/Linux distributions
    modify that behaviour without updating the documentation. Check for non-standard
    patches if your <application>Privoxy</application> version behaves differently.
   </para>
   <para>
    If you configure <application>Privoxy</application> to be reachable from the
    network, consider using <link linkend="acls">access control lists</link>
    (ACL's, see below), and/or a firewall.
   </para>
   <para>
    If you open <application>Privoxy</application> to untrusted users, you should
    also make sure that the following actions are disabled:  <literal><link
    linkend="enable-edit-actions">enable-edit-actions</link></literal> and
    <literal><link linkend="enable-remote-toggle">enable-remote-toggle</link></literal>
   </para>
  </listitem>
 </varlistentry>
 <varlistentry>
  <term>Example:</term>
  <listitem>
   <para>
     Suppose you are running <application>Privoxy</application> on
     a machine which has the address 192.168.0.1 on your local private network
     (192.168.0.0) and has another outside connection with a different address.
     You want it to serve requests from inside only:
   </para>
    <programlisting>
listen-address  192.168.0.1:8118
</programlisting>
   <para>
    Suppose you are running <application>Privoxy</application> on an
    IPv6-capable machine and you want it to listen on the IPv6 address
    of the loopback device:
   </para>
    <programlisting>
listen-address [::1]:8118
</programlisting>
  </listitem>
 </varlistentry>
</variablelist>

<![%config-file;[<literallayout>@@listen-address  127.0.0.1:8118</literallayout>]]>
</sect3>


<!--   ~~~~~       New section      ~~~~~     -->
<sect3 renderas="sect4" id="toggle"><title>toggle</title>

<variablelist>
 <varlistentry>
  <term>Specifies:</term>
  <listitem>
   <para>
    Initial state of "toggle" status
   </para>
  </listitem>
 </varlistentry>
 <varlistentry>
  <term>Type of value:</term>
  <listitem>
   <para>1 or 0</para>
  </listitem>
 </varlistentry>
 <varlistentry>
  <term>Default value:</term>
  <listitem>
   <para>1</para>
  </listitem>
 </varlistentry>
 <varlistentry>
  <term>Effect if unset:</term>
  <listitem>
   <para>
    Act as if toggled on
   </para>
  </listitem>
 </varlistentry>
 <varlistentry>
  <term>Notes:</term>
  <listitem>
   <para>
    If set to 0, <application>Privoxy</application> will start in
    <quote>toggled off</quote> mode, i.e. mostly behave like a normal,
    content-neutral proxy with both ad blocking and content filtering
    disabled. See <literal>enable-remote-toggle</literal> below.
   </para>
  </listitem>
 </varlistentry>
</variablelist>

<![%config-file;[<literallayout>@@toggle  1</literallayout>]]>
</sect3>


<!--   ~~~~~       New section      ~~~~~     -->
<sect3 renderas="sect4" id="enable-remote-toggle"><title>enable-remote-toggle</title>
<variablelist>
 <varlistentry>
  <term>Specifies:</term>
  <listitem>
   <para>
    Whether or not the <ulink url="http://config.privoxy.org/toggle">web-based toggle
    feature</ulink> may be used
   </para>
  </listitem>
 </varlistentry>
 <varlistentry>
  <term>Type of value:</term>
  <listitem>
   <para>0 or 1</para>
  </listitem>
 </varlistentry>
 <varlistentry>
  <term>Default value:</term>
  <listitem>
   <para>0</para>
  </listitem>
 </varlistentry>
 <varlistentry>
  <term>Effect if unset:</term>
  <listitem>
   <para>
    The web-based toggle feature is disabled.
   </para>
  </listitem>
 </varlistentry>
 <varlistentry>
  <term>Notes:</term>
  <listitem>
   <para>
    When toggled off, <application>Privoxy</application> mostly acts like a normal,
    content-neutral proxy, i.e. doesn't block ads or filter content.
   </para>
   <para>
    Access to the toggle feature can <emphasis>not</emphasis> be
    controlled separately by <quote>ACLs</quote> or HTTP authentication,
    so that everybody who can access <application>Privoxy</application> (see
    <quote>ACLs</quote> and <literal>listen-address</literal> above) can
    toggle it for all users. So this option is <emphasis>not recommended</emphasis>
    for multi-user environments with untrusted users.
   </para>
   <para>
    Note that malicious client side code (e.g Java) is also
    capable of using this option.
   </para>
   <para>
    As a lot of <application>Privoxy</application> users don't read
    documentation, this feature is disabled by default.
   </para>
   <para>
    Note that you must have compiled <application>Privoxy</application> with
    support for this feature, otherwise this option has no effect.
   </para>
  </listitem>
 </varlistentry>
</variablelist>

<![%config-file;[<literallayout>@@enable-remote-toggle  0</literallayout>]]>
</sect3>


<!--   ~~~~~       New section      ~~~~~     -->
<sect3 renderas="sect4" id="enable-remote-http-toggle"><title>enable-remote-http-toggle</title>
<variablelist>
 <varlistentry>
  <term>Specifies:</term>
  <listitem>
   <para>
    Whether or not Privoxy recognizes special HTTP headers to change its behaviour.
   </para>
  </listitem>
 </varlistentry>
 <varlistentry>
  <term>Type of value:</term>
  <listitem>
   <para>0 or 1</para>
  </listitem>
 </varlistentry>
 <varlistentry>
  <term>Default value:</term>
  <listitem>
   <para>0</para>
  </listitem>
 </varlistentry>
 <varlistentry>
  <term>Effect if unset:</term>
  <listitem>
   <para>
    Privoxy ignores special HTTP headers.
   </para>
  </listitem>
 </varlistentry>
 <varlistentry>
  <term>Notes:</term>
  <listitem>
   <para>
    When toggled on, the client can change <application>Privoxy's</application>
    behaviour by setting special HTTP headers. Currently the only supported
    special header is <quote>X-Filter: No</quote>, to disable filtering for
    the ongoing request, even if it is enabled in one of the action files.
   </para>
   <para>
    This feature is disabled by default. If you are using
    <application>Privoxy</application> in a environment with trusted clients,
    you may enable this feature at your discretion. Note that malicious client
    side code (e.g Java) is also capable of using this feature.
   </para>
   <para>
    This option will be removed in future releases as it has been obsoleted
    by the more general header taggers.
   </para>
  </listitem>
 </varlistentry>
</variablelist>

<![%config-file;[<literallayout>@@enable-remote-http-toggle  0</literallayout>]]>
</sect3>


<!--   ~~~~~       New section      ~~~~~     -->
<sect3 renderas="sect4" id="enable-edit-actions"><title>enable-edit-actions</title>
<variablelist>
 <varlistentry>
  <term>Specifies:</term>
  <listitem>
   <para>
    Whether or not the <ulink url="http://config.privoxy.org/show-status">web-based actions
    file editor</ulink> may be used
   </para>
  </listitem>
 </varlistentry>
 <varlistentry>
  <term>Type of value:</term>
  <listitem>
   <para>0 or 1</para>
  </listitem>
 </varlistentry>
 <varlistentry>
  <term>Default value:</term>
  <listitem>
   <para>0</para>
  </listitem>
 </varlistentry>
 <varlistentry>
  <term>Effect if unset:</term>
  <listitem>
   <para>
    The web-based actions file editor is disabled.
   </para>
  </listitem>
 </varlistentry>
 <varlistentry>
  <term>Notes:</term>
  <listitem>
   <para>
    Access to the editor can <emphasis>not</emphasis> be
    controlled separately by <quote>ACLs</quote> or HTTP authentication,
    so that everybody who can access <application>Privoxy</application> (see
    <quote>ACLs</quote> and <literal>listen-address</literal> above) can
    modify its configuration for all users.
   </para>
   <para>
    This option is <emphasis>not recommended</emphasis> for environments
    with untrusted users and as a lot of <application>Privoxy</application>
    users don't read documentation, this feature is disabled by default.
   </para>
   <para>
    Note that malicious client side code (e.g Java) is also
    capable of using the actions editor and you shouldn't enable
    this options unless you understand the consequences and are
    sure your browser is configured correctly.
   </para>
   <para>
    Note that you must have compiled <application>Privoxy</application> with
    support for this feature, otherwise this option has no effect.
   </para>
  </listitem>
 </varlistentry>
</variablelist>

<![%config-file;[<literallayout>@@enable-edit-actions 0</literallayout>]]>
</sect3>


<sect3 renderas="sect4" id="enforce-blocks"><title>enforce-blocks</title>
<variablelist>
 <varlistentry>
  <term>Specifies:</term>
  <listitem>
   <para>
    Whether the user is allowed to ignore blocks and can <quote>go there anyway</quote>.
   </para>
  </listitem>
 </varlistentry>
 <varlistentry>
  <term>Type of value:</term>
  <listitem>
   <para>
    <replaceable>0 or 1</replaceable>
   </para>
  </listitem>
 </varlistentry>
 <varlistentry>
  <term>Default value:</term>
  <listitem>
   <para><emphasis>0</emphasis></para>
  </listitem>
 </varlistentry>
 <varlistentry>
  <term>Effect if unset:</term>
  <listitem>
   <para>
    Blocks are not enforced.
   </para>
  </listitem>
 </varlistentry>
 <varlistentry>
  <term>Notes:</term>
  <listitem>
   <para>
    <application>Privoxy</application> is mainly used to block and filter
    requests as a service to the user, for example to block ads and other
    junk that clogs the pipes. <application>Privoxy's</application> configuration
    isn't perfect and sometimes innocent pages are blocked. In this situation it
    makes sense to allow the user to enforce the request and have
    <application>Privoxy</application> ignore the block.
   </para>
   <para>
    In the default configuration <application>Privoxy's</application>
    <quote>Blocked</quote> page contains a <quote>go there anyway</quote>
    link to adds a special string (the force prefix) to the request URL.
    If that link is used, <application>Privoxy</application> will
    detect the force prefix, remove it again and let the request pass.
   </para>
   <para>
    Of course <application>Privoxy</application> can also be used to enforce
    a network policy. In that case the user obviously should not be able to
    bypass any blocks, and that's what the <quote>enforce-blocks</quote>
    option is for. If it's enabled, <application>Privoxy</application> hides
    the <quote>go there anyway</quote> link. If the user adds the force
    prefix by hand, it will not be accepted and the circumvention attempt
    is logged.
   </para>
  </listitem>
 </varlistentry>
 <varlistentry>
  <term>Example:</term>
  <listitem>
   <para>
    enforce-blocks 1
   </para>
  </listitem>
 </varlistentry>
</variablelist>
<![%config-file;[<literallayout>@@enforce-blocks 0</literallayout>]]>
</sect3>


<!--   ~~~~~       New section      ~~~~~     -->
<sect3 renderas="sect4" id="acls"><title>
ACLs: permit-access and deny-access</title>
<anchor id="permit-access">
<anchor id="deny-access">

<variablelist>
 <varlistentry>
  <term>Specifies:</term>
  <listitem>
   <para>
    Who can access what.
   </para>
  </listitem>
 </varlistentry>
 <varlistentry>
  <term>Type of value:</term>
  <listitem>
   <para>
    <replaceable class="parameter">src_addr</replaceable>[:<replaceable class="parameter">port</replaceable>][/<replaceable class="parameter">src_masklen</replaceable>]
    [<replaceable class="parameter">dst_addr</replaceable>[:<replaceable class="parameter">port</replaceable>][/<replaceable class="parameter">dst_masklen</replaceable>]]
   </para>
   <para>
    Where <replaceable class="parameter">src_addr</replaceable> and
   <replaceable class="parameter">dst_addr</replaceable> are IPv4 addresses in dotted decimal notation or valid
    DNS names, <replaceable class="parameter">port</replaceable> is a port
    number, and <replaceable class="parameter">src_masklen</replaceable> and
    <replaceable class="parameter">dst_masklen</replaceable> are subnet masks in CIDR notation, i.e. integer
    values from 2 to 30 representing the length (in bits) of the network address. The masks and the whole
    destination part are optional.
   </para>
   <para>
    If your system implements
    <ulink url="http://tools.ietf.org/html/rfc3493">RFC 3493</ulink>, then
    <replaceable class="parameter">src_addr</replaceable> and <replaceable
    class="parameter">dst_addr</replaceable> can be IPv6 addresses delimited by
    brackets, <replaceable class="parameter">port</replaceable> can be a number
    or a service name, and
    <replaceable class="parameter">src_masklen</replaceable> and
    <replaceable class="parameter">dst_masklen</replaceable> can be a number
    from 0 to 128.
   </para>
  </listitem>
 </varlistentry>
 <varlistentry>
  <term>Default value:</term>
  <listitem>
   <para><emphasis>Unset</emphasis></para>
   <para>
    If no <replaceable class="parameter">port</replaceable> is specified,
    any port will match. If no <replaceable class="parameter">src_masklen</replaceable> or
    <replaceable class="parameter">src_masklen</replaceable> is given, the complete IP
    address has to match (i.e. 32 bits for IPv4 and 128 bits for IPv6).
   </para>
  </listitem>
 </varlistentry>
 <varlistentry>
  <term>Effect if unset:</term>
  <listitem>
   <para>
    Don't restrict access further than implied by <literal>listen-address</literal>
   </para>
  </listitem>
 </varlistentry>
 <varlistentry>
  <term>Notes:</term>
  <listitem>
   <para>
    Access controls are included at the request of ISPs and systems
    administrators, and <emphasis>are not usually needed by individual users</emphasis>.
    For a typical home user, it will normally suffice to ensure that
    <application>Privoxy</application> only listens on the localhost
    (127.0.0.1) or internal (home) network address by means of the
    <link linkend="listen-address"><emphasis>listen-address</emphasis></link>
    option.
   </para>
   <para>
    Please see the warnings in the FAQ that <application>Privoxy</application>
    is not intended to be a substitute for a firewall or to encourage anyone
    to defer addressing basic security weaknesses.
   </para>
   <para>
    Multiple ACL lines are OK.
    If any ACLs are specified, <application>Privoxy</application> only talks
    to IP addresses that match at least one <literal>permit-access</literal> line
    and don't match any subsequent <literal>deny-access</literal> line. In other words, the
    last match wins, with the default being <literal>deny-access</literal>.
   </para>
   <para>
    If <application>Privoxy</application> is using a forwarder (see <literal>forward</literal> below)
    for a particular destination URL, the <replaceable class="parameter">dst_addr</replaceable>
    that is examined is the address of the forwarder and <emphasis>NOT</emphasis> the address
    of the ultimate target. This is necessary because it may be impossible for the local
    <application>Privoxy</application> to determine the IP address of the
    ultimate target (that's often what gateways are used for).
   </para>
   <para>
    You should prefer using IP addresses over DNS names, because the address lookups take
    time. All DNS names must resolve! You can <emphasis>not</emphasis> use domain patterns
    like <quote>*.org</quote> or partial domain names. If a DNS name resolves to multiple
    IP addresses, only the first one is used.
   </para>
   <para>
     Some systems allow IPv4 clients to connect to IPv6 server sockets.
     Then the client's IPv4 address will be translated by the system into
     IPv6 address space with special prefix ::ffff:0:0/96 (so called IPv4
     mapped IPv6 address). <application>Privoxy</application> can handle it
     and maps such ACL addresses automatically.
   </para>
   <para>
    Denying access to particular sites by ACL may have undesired side effects
    if the site in question is hosted on a machine which also hosts other sites
    (most sites are).
   </para>
  </listitem>
 </varlistentry>
 <varlistentry>
  <term>Examples:</term>
  <listitem>
   <para>
    Explicitly define the default behavior if no ACL and
    <literal>listen-address</literal> are set: <quote>localhost</quote>
    is OK. The absence of a <replaceable class="parameter">dst_addr</replaceable> implies that
    <emphasis>all</emphasis> destination addresses are OK:
   </para>
    <screen>
permit-access  localhost
</screen>
   <para>
    Allow any host on the same class C subnet as www.privoxy.org access to
    nothing but www.example.com (or other domains hosted on the same system):
   </para>
    <screen>
permit-access  www.privoxy.org/24 www.example.com/32
</screen>
   <para>
    Allow access from any host on the 26-bit subnet 192.168.45.64 to anywhere,
    with the exception that 192.168.45.73 may not access the IP address behind
    www.dirty-stuff.example.com:
   </para>
    <screen>
permit-access  192.168.45.64/26
deny-access    192.168.45.73    www.dirty-stuff.example.com
</screen>
   <para>
     Allow access from the IPv4 network 192.0.2.0/24 even if listening on
     an IPv6 wild card address (not supported on all platforms):
   </para>
    <programlisting>
permit-access  192.0.2.0/24
</programlisting>
   <para>
     This is equivalent to the following line even if listening on an
     IPv4 address (not supported on all platforms):
   </para>
    <programlisting>
permit-access  [::ffff:192.0.2.0]/120
</programlisting>
  </listitem>
 </varlistentry>
</variablelist>
</sect3>


<!--   ~~~~~       New section      ~~~~~     -->
<sect3 renderas="sect4" id="buffer-limit"><title>buffer-limit</title>

<variablelist>
 <varlistentry>
  <term>Specifies:</term>
  <listitem>
   <para>
    Maximum size of the buffer for content filtering.
   </para>
  </listitem>
 </varlistentry>
 <varlistentry>
  <term>Type of value:</term>
  <listitem>
   <para>Size in Kbytes</para>
  </listitem>
 </varlistentry>
 <varlistentry>
  <term>Default value:</term>
  <listitem>
   <para>4096</para>
  </listitem>
 </varlistentry>
 <varlistentry>
  <term>Effect if unset:</term>
  <listitem>
   <para>
    Use a 4MB (4096 KB) limit.
   </para>
  </listitem>
 </varlistentry>
 <varlistentry>
  <term>Notes:</term>
  <listitem>
   <para>
    For content filtering, i.e. the <literal>+filter</literal> and
    <literal>+deanimate-gif</literal> actions, it is necessary that
    <application>Privoxy</application> buffers the entire document body.
    This can be potentially dangerous, since a server could just keep sending
    data indefinitely and wait for your RAM to exhaust -- with nasty consequences.
    Hence this option.
   </para>
   <para>
    When a document buffer size reaches the <literal>buffer-limit</literal>, it is
    flushed to the client unfiltered and no further attempt to
    filter the rest of the document is made. Remember that there may be multiple threads
    running, which might require up to <literal>buffer-limit</literal> Kbytes
    <emphasis>each</emphasis>, unless you have enabled <quote>single-threaded</quote>
    above.
   </para>
  </listitem>
 </varlistentry>
</variablelist>

<![%config-file;[<literallayout>@@buffer-limit 4096</literallayout>]]>
</sect3>

<!--   ~~~~~       New section      ~~~~~     -->
<sect3 renderas="sect4" id="enable-proxy-authentication-forwarding"><title>enable-proxy-authentication-forwarding</title>
<variablelist>
 <varlistentry>
  <term>Specifies:</term>
  <listitem>
   <para>
    Whether or not proxy authentication through &my-app; should work.
   </para>
  </listitem>
 </varlistentry>
 <varlistentry>
  <term>Type of value:</term>
  <listitem>
   <para>0 or 1</para>
  </listitem>
 </varlistentry>
 <varlistentry>
  <term>Default value:</term>
  <listitem>
   <para>0</para>
  </listitem>
 </varlistentry>
 <varlistentry>
  <term>Effect if unset:</term>
  <listitem>
   <para>
    Proxy authentication headers are removed.
   </para>
  </listitem>
 </varlistentry>
 <varlistentry>
  <term>Notes:</term>
  <listitem>
   <para>
    Privoxy itself does not support proxy authentication, but can
    allow clients to authenticate against Privoxy's parent proxy.
   </para>
   <para>
    By default Privoxy (3.0.21 and later) don't do that and remove
    Proxy-Authorization headers in requests and Proxy-Authenticate
    headers in responses to make it harder for malicious sites to
    trick inexperienced users into providing login information.
   </para>
   <para>
    If this option is enabled the headers are forwarded.
   </para>
   <para>
    Enabling this option is <emphasis>not recommended</emphasis> if there is
    no parent proxy that requires authentication or if the local network between
    Privoxy and the parent proxy isn't trustworthy. If proxy authentication is
    only required for some requests, it is recommended to use a client header filter
    to remove the authentication headers for requests where they aren't needed.
   </para>
  </listitem>
 </varlistentry>
</variablelist>

<![%config-file;[<literallayout>@@enable-proxy-authentication-forwarding 0</literallayout>]]>
</sect3>

<!--   ~~~~~       New section      ~~~~~     -->
<sect3 renderas="sect4" id="trusted-cgi-referer"><title>trusted-cgi-referer</title>
<variablelist>
 <varlistentry>
  <term>Specifies:</term>
  <listitem>
   <para>
    A trusted website or webpage whose links can be followed to reach sensitive CGI pages
   </para>
  </listitem>
 </varlistentry>
 <varlistentry>
  <term>Type of value:</term>
  <listitem>
   <para>URL or URL prefix</para>
  </listitem>
 </varlistentry>
 <varlistentry>
  <term>Default value:</term>
  <listitem>
   <para>Unset</para>
  </listitem>
 </varlistentry>
 <varlistentry>
  <term>Effect if unset:</term>
  <listitem>
   <para>
    No external pages are considered trusted referers.
   </para>
  </listitem>
 </varlistentry>
 <varlistentry>
  <term>Notes:</term>
  <listitem>
   <para>
    Before &my-app; accepts configuration changes through CGI pages like
    <link linkend="client-specific-tag">client-tags</link> or the
    <link linkend="enable-remote-toggle">remote toggle</link>, it checks
    the Referer header to see if the request comes from a trusted source.
   </para>
   <para>
    By default only the webinterface domains
    <ulink url="http://config.privoxy.org/">config.privoxy.org</ulink>
    and
    <ulink url="http://p.p/">p.p</ulink>
    are considered trustworthy.
    Requests originating from other domains are rejected to prevent
    third-parties from modifiying Privoxy's state by e.g. embedding
    images that result in CGI requests.
   </para>
   <para>
    In some environments it may be desirable to embed links to CGI pages
    on external pages, for example on an Intranet homepage the Privoxy admin
    controls.
   </para>
   <para>
    The <quote>trusted-cgi-referer</quote> option can be used to add that page,
    or the whole domain, as trusted source so the resulting requests aren't
    rejected.
    Requests are accepted if the specified trusted-cgi-refer is the prefix
    of the Referer.
   </para>
   <para>
    If the trusted source is supposed to access the CGI pages via
    JavaScript the <link linkend="cors-allowed-origin">cors-allowed-origin</link>
    option can be used.
   </para>
   <warning>
    <para>
     Declaring pages the admin doesn't control trustworthy may allow
     malicious third parties to modify Privoxy's internal state against
     the user's wishes and without the user's knowledge.
   </para>
   </warning>
  </listitem>
 </varlistentry>
</variablelist>

<![%config-file;[<literallayout>@@#trusted-cgi-referer http://www.example.org/local-privoxy-control-page</literallayout>]]>
</sect3>


<!--   ~~~~~       New section      ~~~~~     -->
<sect3 renderas="sect4" id="cors-allowed-origin"><title>cors-allowed-origin</title>
<variablelist>
 <varlistentry>
  <term>Specifies:</term>
  <listitem>
   <para>
    A trusted website which can access &my-app;'s CGI pages through JavaScript.
   </para>
  </listitem>
 </varlistentry>
 <varlistentry>
  <term>Type of value:</term>
  <listitem>
   <para>URL</para>
  </listitem>
 </varlistentry>
 <varlistentry>
  <term>Default value:</term>
  <listitem>
   <para>Unset</para>
  </listitem>
 </varlistentry>
 <varlistentry>
  <term>Effect if unset:</term>
  <listitem>
   <para>
    No external sites get access via cross-origin resource sharing.
   </para>
  </listitem>
 </varlistentry>
 <varlistentry>
  <term>Notes:</term>
  <listitem>
   <para>
    Modern browsers by default prevent cross-origin requests made
    via JavaScript to &my-app;'s CGI interface even if &my-app;
    would trust the referer because it's white listed via the
    <link linkend="trusted-cgi-referer">trusted-cgi-referer</link>
    directive.
   </para>
   <para>
    <ulink url="https://en.wikipedia.org/wiki/Cross-origin_resource_sharing"
     >Cross-origin resource sharing (CORS)</ulink> is a mechanism to allow
    cross-origin requests.
   </para>
   <para>
    The <quote>cors-allowed-origin</quote> option can be used to specify
    a domain that is allowed to make requests to Privoxy CGI interface
    via JavaScript. It is used in combination with the
    <link linkend="trusted-cgi-referer">trusted-cgi-referer</link>
    directive.
   </para>
   <warning>
    <para>
     Declaring domains the admin doesn't control trustworthy may allow
     malicious third parties to modify Privoxy's internal state against
     the user's wishes and without the user's knowledge.
   </para>
   </warning>
  </listitem>
 </varlistentry>
</variablelist>

<![%config-file;[<literallayout>@@#cors-allowed-origin http://www.example.org/</literallayout>]]>
</sect3>

</sect2>

<!--  ~  End section  ~  -->


<!--   ~~~~~       New section      ~~~~~     -->

<sect2 id="forwarding">
<title>Forwarding</title>

<para>
 This feature allows routing of HTTP requests through a chain of
 multiple proxies.
</para>
<para>
 Forwarding can be used to chain Privoxy with a caching proxy to speed
 up browsing. Using a parent proxy may also be necessary if the machine
 that <application>Privoxy</application> runs on has no direct Internet access.
</para>
<para>
 Note that parent proxies can severely decrease your privacy level.
 For example a parent proxy could add your IP address to the request
 headers and if it's a caching proxy it may add the <quote>Etag</quote>
 header to revalidation requests again, even though you configured Privoxy
 to remove it. It may also ignore Privoxy's header time randomization and use the
 original values which could be used by the server as cookie replacement
 to track your steps between visits.
</para>

<para>
 Also specified here are SOCKS proxies. <application>Privoxy</application>
 supports the SOCKS 4 and SOCKS 4A protocols.
</para>

<sect3 renderas="sect4" id="forward"><title>forward</title>
<variablelist>
 <varlistentry>
  <term>Specifies:</term>
  <listitem>
   <para>
    To which parent HTTP proxy specific requests should be routed.
   </para>
  </listitem>
 </varlistentry>
 <varlistentry>
  <term>Type of value:</term>
  <listitem>
   <para>
    <replaceable class="parameter">target_pattern</replaceable>
    <replaceable class="parameter">http_parent</replaceable>[:<replaceable class="parameter">port</replaceable>]
   </para>
   <para>
    where <replaceable class="parameter">target_pattern</replaceable> is a <link linkend="af-patterns">URL pattern</link>
    that specifies to which requests (i.e. URLs) this forward rule shall apply. Use <literal>/</literal> to
    denote <quote>all URLs</quote>.
    <replaceable class="parameter">http_parent</replaceable>[:<replaceable class="parameter">port</replaceable>]
    is the DNS name or IP address of the parent HTTP proxy through which the requests should be forwarded,
    optionally followed by its listening port (default: 8000).
    Use a single dot (<literal>.</literal>) to denote <quote>no forwarding</quote>.
   </para>
  </listitem>
 </varlistentry>
 <varlistentry>
  <term>Default value:</term>
  <listitem>
   <para><emphasis>Unset</emphasis></para>
  </listitem>
 </varlistentry>
 <varlistentry>
  <term>Effect if unset:</term>
  <listitem>
   <para>
    Don't use parent HTTP proxies.
   </para>
  </listitem>
 </varlistentry>
 <varlistentry>
  <term>Notes:</term>
  <listitem>
   <para>
    If <replaceable class="parameter">http_parent</replaceable> is <quote>.</quote>, then requests are not
    forwarded to another HTTP proxy but are made directly to the web servers.
   </para>
   <para>
    <replaceable class="parameter">http_parent</replaceable> can be a
     numerical IPv6 address (if
    <ulink url="http://tools.ietf.org/html/rfc3493">RFC 3493</ulink> is
    implemented). To prevent clashes with the port delimiter, the whole IP
    address has to be put into brackets. On the other hand a <replaceable
    class="parameter">target_pattern</replaceable> containing an IPv6 address
    has to be put into angle brackets (normal brackets are reserved for
    regular expressions already).
   </para>
   <para>
    Multiple lines are OK, they are checked in sequence, and the last match wins.
   </para>
  </listitem>
 </varlistentry>
 <varlistentry>
  <term>Examples:</term>
  <listitem>
   <para>
    Everything goes to an example parent proxy, except SSL on port 443 (which it doesn't handle):
   </para>
    <screen>
forward   /      parent-proxy.example.org:8080
forward   :443   .
</screen>
   <para>
    Everything goes to our example ISP's caching proxy, except for requests
    to that ISP's sites:
   </para>
    <screen>
forward   /                  caching-proxy.isp.example.net:8000
forward   .isp.example.net   .
</screen>
   <para>
    Parent proxy specified by an IPv6 address:
   </para>
    <programlisting>
forward   /                   [2001:DB8::1]:8000
</programlisting>
   <para>
    Suppose your parent proxy doesn't support IPv6:
   </para>
    <programlisting>
forward  /                        parent-proxy.example.org:8000
forward  ipv6-server.example.org  .
forward  &lt;[2-3][0-9a-f][0-9a-f][0-9a-f]:*&gt;   .
</programlisting>
  </listitem>
 </varlistentry>
</variablelist>
</sect3>


<!--   ~~~~~       New section      ~~~~~     -->
<sect3 renderas="sect4" id="socks"><title>
forward-socks4, forward-socks4a, forward-socks5 and forward-socks5t</title>
<anchor id="forward-socks4">
<anchor id="forward-socks4a">

<variablelist>
 <varlistentry>
  <term>Specifies:</term>
  <listitem>
   <para>
    Through which SOCKS proxy (and optionally to which parent HTTP proxy) specific requests should be routed.
   </para>
  </listitem>
 </varlistentry>
 <varlistentry>
  <term>Type of value:</term>
  <listitem>
   <para>
    <replaceable class="parameter">target_pattern</replaceable>
    [<replaceable class="parameter">user</replaceable>:<replaceable class="parameter">pass</replaceable>@]<replaceable class="parameter">socks_proxy</replaceable>[:<replaceable class="parameter">port</replaceable>]
    <replaceable class="parameter">http_parent</replaceable>[:<replaceable class="parameter">port</replaceable>]
   </para>
   <para>
    where <replaceable class="parameter">target_pattern</replaceable> is a
    <link linkend="af-patterns">URL pattern</link> that specifies to which
    requests (i.e. URLs) this forward rule shall apply. Use <literal>/</literal> to
    denote <quote>all URLs</quote>. <replaceable class="parameter">http_parent</replaceable>
    and <replaceable class="parameter">socks_proxy</replaceable>
    are IP addresses in dotted decimal notation or valid DNS names
    (<replaceable class="parameter">http_parent</replaceable>
    may be <quote>.</quote> to denote <quote>no HTTP forwarding</quote>), and the optional
    <replaceable class="parameter">port</replaceable> parameters are TCP ports,
    i.e. integer values from 1 to 65535. <replaceable class="parameter">user</replaceable> and
    <replaceable class="parameter">pass</replaceable> can be used for SOCKS5 authentication if required.
   </para>
  </listitem>
 </varlistentry>
 <varlistentry>
  <term>Default value:</term>
  <listitem>
   <para><emphasis>Unset</emphasis></para>
  </listitem>
 </varlistentry>
 <varlistentry>
  <term>Effect if unset:</term>
  <listitem>
   <para>
    Don't use SOCKS proxies.
   </para>
  </listitem>
 </varlistentry>
 <varlistentry>
  <term>Notes:</term>
  <listitem>
   <para>
    Multiple lines are OK, they are checked in sequence, and the last match wins.
   </para>
   <para>
    The difference between <literal>forward-socks4</literal> and <literal>forward-socks4a</literal>
    is that in the SOCKS 4A protocol, the DNS resolution of the target hostname happens on the SOCKS
    server, while in SOCKS 4 it happens locally.
   </para>
   <para>
    With <literal>forward-socks5</literal> the DNS resolution will happen on the remote server as well.
   </para>
   <para>
    <literal>forward-socks5t</literal> works like vanilla <literal>forward-socks5</literal> but
    lets &my-app; additionally use Tor-specific SOCKS extensions. Currently the only supported
    SOCKS extension is optimistic data which can reduce the latency for the first request made
    on a newly created connection.
   </para>
   <para>
    <replaceable class="parameter">socks_proxy</replaceable> and
    <replaceable class="parameter">http_parent</replaceable> can be a
     numerical IPv6 address (if
    <ulink url="http://tools.ietf.org/html/rfc3493">RFC 3493</ulink> is
    implemented). To prevent clashes with the port delimiter, the whole IP
    address has to be put into brackets. On the other hand a <replaceable
    class="parameter">target_pattern</replaceable> containing an IPv6 address
    has to be put into angle brackets (normal brackets are reserved for
    regular expressions already).
   </para>
   <para>
    If <replaceable class="parameter">http_parent</replaceable> is <quote>.</quote>, then requests are not
    forwarded to another HTTP proxy but are made (HTTP-wise) directly to the web servers, albeit through
    a SOCKS proxy.
   </para>
  </listitem>
 </varlistentry>
 <varlistentry>
  <term>Examples:</term>
  <listitem>
   <para>
     From the company example.com, direct connections are made to all
     <quote>internal</quote> domains, but everything outbound goes through
     their ISP's proxy by way of example.com's corporate SOCKS 4A gateway to
     the Internet.
   </para>
    <screen>
forward-socks4a   /              socks-gw.example.com:1080  www-cache.isp.example.net:8080
forward           .example.com   .
</screen>
   <para>
    A rule that uses a SOCKS 4 gateway for all destinations but no HTTP parent looks like this:
   </para>
    <screen>
forward-socks4   /               socks-gw.example.com:1080  .
</screen>

   <para>
    To connect SOCKS5 proxy which requires username/password authentication:
   </para>
    <screen>
forward-socks5   /               user:pass@socks-gw.example.com:1080  .
</screen>

    <para>
    To chain Privoxy and Tor, both running on the same system, you would use
    something like:
   </para>
    <screen>
forward-socks5t   /               127.0.0.1:9050 .
</screen>
   <para>
    Note that if you got Tor through one of the bundles, you may
    have to change the port from 9050 to 9150 (or even another one).
    For details, please check the documentation on the
    <ulink url="https://torproject.org/">Tor website</ulink>.
   </para>
   <para>
    The public <application>Tor</application> network can't be used to
    reach your local network, if you need to access local servers you
    therefore might want to make some exceptions:
   </para>
    <screen>
forward         192.168.*.*/     .
forward          10.*.*.*/       .
forward         127.*.*.*/       .
</screen>
   <para>
    Unencrypted connections to systems in these address ranges will
    be as (un)secure as the local network is, but the alternative is that you
    can't reach the local network through <application>Privoxy</application>
    at all. Of course this may actually be desired and there is no reason
    to make these exceptions if you aren't sure you need them.
   </para>
   <para>
    If you also want to be able to reach servers in your local network by
    using their names, you will need additional exceptions that look like
    this:
   </para>
    <screen>
forward           localhost/     .
</screen>

  </listitem>
 </varlistentry>
</variablelist>
</sect3>

<![%user-man;[     <!-- not included in config due to length -->
<!--   ~~~~~       New section      ~~~~~     -->
<sect3 renderas="sect4" id="advanced-forwarding-examples"><title>Advanced Forwarding Examples</title>

<para>
 If you have links to multiple ISPs that provide various special content
 only to their subscribers, you can configure multiple <application>Privoxies</application>
 which have connections to the respective ISPs to act as forwarders to each other, so that
 <emphasis>your</emphasis> users can see the internal content of all ISPs.
</para>

<para>
 Assume that host-a has a PPP connection to isp-a.example.net. And host-b has a PPP connection to
 isp-b.example.org. Both run <application>Privoxy</application>. Their forwarding
 configuration can look like this:
</para>

<para>
 host-a:
</para>

<screen>
forward    /           .
forward    .isp-b.example.net  host-b:8118
</screen>

<para>
 host-b:
</para>

<screen>
forward    /           .
forward    .isp-a.example.org  host-a:8118
</screen>

<para>
 Now, your users can set their browser's proxy to use either
 host-a or host-b and be able to browse the internal content
 of both isp-a and isp-b.
</para>

<para>
 If you intend to chain <application>Privoxy</application> and
 <application>squid</application> locally, then chaining as
 <literal>browser -> squid -> privoxy</literal> is the recommended way.
</para>

<para>
 Assuming that <application>Privoxy</application> and <application>squid</application>
 run on the same box, your <application>squid</application> configuration could then look like this:
</para>

<screen>
# Define Privoxy as parent proxy (without ICP)
cache_peer 127.0.0.1 parent 8118 7 no-query

# Define ACL for protocol FTP
acl ftp proto FTP

# Do not forward FTP requests to Privoxy
always_direct allow ftp

# Forward all the rest to Privoxy
never_direct allow all
</screen>

<para>
 You would then need to change your browser's proxy settings to <application>squid</application>'s address and port.
 Squid normally uses port 3128. If unsure consult <literal>http_port</literal> in <filename>squid.conf</filename>.
</para>

<para>
 You could just as well decide to only forward requests you suspect
 of leading to Windows executables through a virus-scanning parent proxy,
 say, on <literal>antivir.example.com</literal>, port 8010:
</para>

<screen>
forward   /                          .
forward   /.*\.(exe|com|dll|zip)$    antivir.example.com:8010
</screen>

</sect3>
]]>

<sect3 renderas="sect4" id="forwarded-connect-retries"><title>forwarded-connect-retries</title>
<variablelist>
 <varlistentry>
  <term>Specifies:</term>
  <listitem>
   <para>
    How often Privoxy retries if a forwarded connection request fails.
   </para>
  </listitem>
 </varlistentry>
 <varlistentry>
  <term>Type of value:</term>
  <listitem>
   <para>
    <replaceable class="parameter">Number of retries.</replaceable>
   </para>
  </listitem>
 </varlistentry>
 <varlistentry>
  <term>Default value:</term>
  <listitem>
   <para><emphasis>0</emphasis></para>
  </listitem>
 </varlistentry>
 <varlistentry>
  <term>Effect if unset:</term>
  <listitem>
   <para>
    Connections forwarded through other proxies are treated like direct connections and no retry attempts are made.
   </para>
  </listitem>
 </varlistentry>
 <varlistentry>
  <term>Notes:</term>
  <listitem>
   <para>
    <replaceable class="parameter">forwarded-connect-retries</replaceable> is mainly interesting
    for socks4a connections, where <application>Privoxy</application> can't detect why the connections failed.
    The connection might have failed because of a DNS timeout in which case a retry makes sense,
    but it might also have failed because the server doesn't exist or isn't reachable. In this
    case the retry will just delay the appearance of Privoxy's error message.
   </para>
   <para>
    Note that in the context of this option, <quote>forwarded connections</quote> includes all connections
    that Privoxy forwards through other proxies. This option is not limited to the HTTP CONNECT method.
   </para>
   <para>
    Only use this option, if you are getting lots of forwarding-related error messages
    that go away when you try again manually. Start with a small value and check Privoxy's
    logfile from time to time, to see how many retries are usually needed.
   </para>
  </listitem>
 </varlistentry>
 <varlistentry>
  <term>Example:</term>
  <listitem>
   <para>
    forwarded-connect-retries 1
   </para>
  </listitem>
 </varlistentry>
</variablelist>
<![%config-file;[<literallayout>@@forwarded-connect-retries  0</literallayout>]]>
</sect3>

</sect2>

<sect2 id="misc">
<title>Miscellaneous</title>

<sect3 renderas="sect4" id="accept-intercepted-requests"><title>accept-intercepted-requests</title>
<variablelist>
 <varlistentry>
  <term>Specifies:</term>
  <listitem>
   <para>
    Whether intercepted requests should be treated as valid.
   </para>
  </listitem>
 </varlistentry>
 <varlistentry>
  <term>Type of value:</term>
  <listitem>
   <para>
    <replaceable>0 or 1</replaceable>
   </para>
  </listitem>
 </varlistentry>
 <varlistentry>
  <term>Default value:</term>
  <listitem>
   <para><emphasis>0</emphasis></para>
  </listitem>
 </varlistentry>
 <varlistentry>
  <term>Effect if unset:</term>
  <listitem>
   <para>
    Only proxy requests are accepted, intercepted requests are treated as invalid.
   </para>
  </listitem>
 </varlistentry>
 <varlistentry>
  <term>Notes:</term>
  <listitem>
   <para>
    If you don't trust your clients and want to force them
    to use <application>Privoxy</application>, enable this
    option and configure your packet filter to redirect outgoing
    HTTP connections into <application>Privoxy</application>.
   </para>
   <para>
    Note that intercepting encrypted connections (HTTPS) isn't supported.
   </para>
   <para>
    Make sure that <application>Privoxy's</application> own requests
    aren't redirected as well. Additionally take care that
    <application>Privoxy</application> can't intentionally connect
    to itself, otherwise you could run into redirection loops if
    <application>Privoxy's</application> listening port is reachable
    by the outside or an attacker has access to the pages you visit.
   </para>
   <para>
    If you are running Privoxy as intercepting proxy without being
    able to intercept all client requests you may want to adjust
    the CGI templates to make sure they don't reference content from
    config.privoxy.org.
   </para>
  </listitem>
 </varlistentry>
 <varlistentry>
  <term>Example:</term>
  <listitem>
   <para>
    accept-intercepted-requests 1
   </para>
  </listitem>
 </varlistentry>
</variablelist>
<![%config-file;[<literallayout>@@accept-intercepted-requests 0</literallayout>]]>
</sect3>

<sect3 renderas="sect4" id="allow-cgi-request-crunching"><title>allow-cgi-request-crunching</title>
<variablelist>
 <varlistentry>
  <term>Specifies:</term>
  <listitem>
   <para>
    Whether requests to <application>Privoxy's</application> CGI pages can be blocked or redirected.
   </para>
  </listitem>
 </varlistentry>
 <varlistentry>
  <term>Type of value:</term>
  <listitem>
   <para>
    <replaceable>0 or 1</replaceable>
   </para>
  </listitem>
 </varlistentry>
 <varlistentry>
  <term>Default value:</term>
  <listitem>
   <para><emphasis>0</emphasis></para>
  </listitem>
 </varlistentry>
 <varlistentry>
  <term>Effect if unset:</term>
  <listitem>
   <para>
    <application>Privoxy</application> ignores block and redirect actions for its CGI pages.
   </para>
  </listitem>
 </varlistentry>
 <varlistentry>
  <term>Notes:</term>
  <listitem>
   <para>
    By default <application>Privoxy</application> ignores block or redirect actions
    for its CGI pages. Intercepting these requests can be useful in multi-user
    setups to implement fine-grained access control, but it can also render the complete
    web interface useless and make debugging problems painful if done without care.
   </para>
   <para>
    Don't enable this option unless you're sure that you really need it.
   </para>
  </listitem>
 </varlistentry>
 <varlistentry>
  <term>Example:</term>
  <listitem>
   <para>
    allow-cgi-request-crunching 1
   </para>
  </listitem>
 </varlistentry>
</variablelist>
<![%config-file;[<literallayout>@@allow-cgi-request-crunching 0</literallayout>]]>
</sect3>

<sect3 renderas="sect4" id="split-large-forms"><title>split-large-forms</title>
<variablelist>
 <varlistentry>
  <term>Specifies:</term>
  <listitem>
   <para>
    Whether the CGI interface should stay compatible with broken HTTP clients.
   </para>
  </listitem>
 </varlistentry>
 <varlistentry>
  <term>Type of value:</term>
  <listitem>
   <para>
    <replaceable>0 or 1</replaceable>
   </para>
  </listitem>
 </varlistentry>
 <varlistentry>
  <term>Default value:</term>
  <listitem>
   <para><emphasis>0</emphasis></para>
  </listitem>
 </varlistentry>
 <varlistentry>
  <term>Effect if unset:</term>
  <listitem>
   <para>
    The CGI form generate long GET URLs.
   </para>
  </listitem>
 </varlistentry>
 <varlistentry>
  <term>Notes:</term>
  <listitem>
   <para>
    <application>Privoxy's</application> CGI forms can lead to
    rather long URLs. This isn't a problem as far as the HTTP
    standard is concerned, but it can confuse clients with arbitrary
    URL length limitations.
   </para>
   <para>
    Enabling split-large-forms causes <application>Privoxy</application>
    to divide big forms into smaller ones to keep the URL length down.
    It makes editing a lot less convenient and you can no longer
    submit all changes at once, but at least it works around this
    browser bug.
   </para>
   <para>
    If you don't notice any editing problems, there is no reason
    to enable this option, but if one of the submit buttons appears
    to be broken, you should give it a try.
   </para>
  </listitem>
 </varlistentry>
 <varlistentry>
  <term>Example:</term>
  <listitem>
   <para>
    split-large-forms 1
   </para>
  </listitem>
 </varlistentry>
</variablelist>
<![%config-file;[<literallayout>@@split-large-forms 0</literallayout>]]>
</sect3>

<sect3 renderas="sect4" id="keep-alive-timeout"><title>keep-alive-timeout</title>
<variablelist>
 <varlistentry>
  <term>Specifies:</term>
  <listitem>
   <para>
    Number of seconds after which an open connection will no longer be reused.
   </para>
  </listitem>
 </varlistentry>
 <varlistentry>
  <term>Type of value:</term>
  <listitem>
   <para>
    <replaceable>Time in seconds.</replaceable>
   </para>
  </listitem>
 </varlistentry>
 <varlistentry>
  <term>Default value:</term>
  <listitem>
   <para>None</para>
  </listitem>
 </varlistentry>
 <varlistentry>
  <term>Effect if unset:</term>
  <listitem>
   <para>
    Connections are not kept alive.
   </para>
  </listitem>
 </varlistentry>
 <varlistentry>
  <term>Notes:</term>
  <listitem>
   <para>
    This option allows clients to keep the connection to &my-app;
    alive. If the server supports it, &my-app; will keep
    the connection to the server alive as well. Under certain
    circumstances this may result in speed-ups.
   </para>
   <para>
    By default, &my-app; will close the connection to the server if
    the client connection gets closed, or if the specified timeout
    has been reached without a new request coming in. This behaviour
    can be changed with the <ulink
     url="#CONNECTION-SHARING">connection-sharing</ulink> option.
   </para>
   <para>
    This option has no effect if <application>Privoxy</application>
    has been compiled without keep-alive support.
   </para>
   <para>
    Note that a timeout of five seconds as used in the default
    configuration file significantly decreases the number of
    connections that will be reused. The value is used because
    some browsers limit the number of connections they open to
    a single host and apply the same limit to proxies. This can
    result in a single website <quote>grabbing</quote> all the
    connections the browser allows, which means connections to
    other websites can't be opened until the connections currently
    in use time out.
   </para>
   <para>
    Several users have reported this as a Privoxy bug, so the
    default value has been reduced. Consider increasing it to
    300 seconds or even more if you think your browser can handle
    it. If your browser appears to be hanging, it probably can't.
   </para>
  </listitem>
 </varlistentry>
 <varlistentry>
  <term>Example:</term>
  <listitem>
   <para>
    keep-alive-timeout 300
   </para>
  </listitem>
 </varlistentry>
</variablelist>
<![%config-file;[<literallayout>@@keep-alive-timeout 5</literallayout>]]>
</sect3>


<sect3 renderas="sect4" id="tolerate-pipelining"><title>tolerate-pipelining</title>
<variablelist>
 <varlistentry>
  <term>Specifies:</term>
  <listitem>
   <para>
    Whether or not pipelined requests should be served.
   </para>
  </listitem>
 </varlistentry>
 <varlistentry>
  <term>Type of value:</term>
  <listitem>
   <para>
    <replaceable>0 or 1.</replaceable>
   </para>
  </listitem>
 </varlistentry>
 <varlistentry>
  <term>Default value:</term>
  <listitem>
   <para>None</para>
  </listitem>
 </varlistentry>
 <varlistentry>
  <term>Effect if unset:</term>
  <listitem>
   <para>
    If Privoxy receives more than one request at once, it terminates the
    client connection after serving the first one.
   </para>
  </listitem>
 </varlistentry>
 <varlistentry>
  <term>Notes:</term>
  <listitem>
   <para>
    &my-app; currently doesn't pipeline outgoing requests,
    thus allowing pipelining on the client connection is not
    guaranteed to improve the performance.
   </para>
   <para>
    By default &my-app; tries to discourage clients from pipelining
    by discarding aggressively pipelined requests, which forces the
    client to resend them through a new connection.
   </para>
   <para>
    This option lets &my-app; tolerate pipelining. Whether or not
    that improves performance mainly depends on the client configuration.
   </para>
   <para>
    If you are seeing problems with pages not properly loading,
    disabling this option could work around the problem.
   </para>
  </listitem>
 </varlistentry>
 <varlistentry>
  <term>Example:</term>
  <listitem>
   <para>
    tolerate-pipelining 1
   </para>
  </listitem>
 </varlistentry>
</variablelist>
<![%config-file;[<literallayout>@@tolerate-pipelining 1</literallayout>]]>
</sect3>


<sect3 renderas="sect4" id="default-server-timeout"><title>default-server-timeout</title>
<variablelist>
 <varlistentry>
  <term>Specifies:</term>
  <listitem>
   <para>
    Assumed server-side keep-alive timeout if not specified by the server.
   </para>
  </listitem>
 </varlistentry>
 <varlistentry>
  <term>Type of value:</term>
  <listitem>
   <para>
    <replaceable>Time in seconds.</replaceable>
   </para>
  </listitem>
 </varlistentry>
 <varlistentry>
  <term>Default value:</term>
  <listitem>
   <para>None</para>
  </listitem>
 </varlistentry>
 <varlistentry>
  <term>Effect if unset:</term>
  <listitem>
   <para>
    Connections for which the server didn't specify the keep-alive
    timeout are not reused.
   </para>
  </listitem>
 </varlistentry>
 <varlistentry>
  <term>Notes:</term>
  <listitem>
   <para>
    Enabling this option significantly increases the number of connections
    that are reused, provided the <ulink
     url="#KEEP-ALIVE-TIMEOUT">keep-alive-timeout</ulink> option
    is also enabled.
   </para>
   <para>
    While it also increases the number of connections problems
    when &my-app; tries to reuse a connection that already has
    been closed on the server side, or is closed while &my-app;
    is trying to reuse it, this should only be a problem if it
    happens for the first request sent by the client. If it happens
    for requests on reused client connections, &my-app; will simply
    close the connection and the client is supposed to retry the
    request without bothering the user.
   </para>
   <para>
    Enabling this option is therefore only recommended if the
    <ulink
     url="#CONNECTION-SHARING">connection-sharing</ulink> option
    is disabled.
   </para>
   <para>
    It is an error to specify a value larger than the <ulink
     url="#KEEP-ALIVE-TIMEOUT">keep-alive-timeout</ulink> value.
   </para>
   <para>
    This option has no effect if <application>Privoxy</application>
    has been compiled without keep-alive support.
   </para>
  </listitem>
 </varlistentry>
 <varlistentry>
  <term>Example:</term>
  <listitem>
   <para>
    default-server-timeout 60
   </para>
  </listitem>
 </varlistentry>
</variablelist>
<![%config-file;[<literallayout>@@#default-server-timeout 5</literallayout>]]>
</sect3>


<sect3 renderas="sect4" id="connection-sharing"><title>connection-sharing</title>
<variablelist>
 <varlistentry>
  <term>Specifies:</term>
  <listitem>
   <para>
    Whether or not outgoing connections that have been kept alive
    should be shared between different incoming connections.
   </para>
  </listitem>
 </varlistentry>
 <varlistentry>
  <term>Type of value:</term>
  <listitem>
   <para>
    <replaceable>0 or 1</replaceable>
   </para>
  </listitem>
 </varlistentry>
 <varlistentry>
  <term>Default value:</term>
  <listitem>
   <para>None</para>
  </listitem>
 </varlistentry>
 <varlistentry>
  <term>Effect if unset:</term>
  <listitem>
   <para>
    Connections are not shared.
   </para>
  </listitem>
 </varlistentry>
 <varlistentry>
  <term>Notes:</term>
  <listitem>
   <para>
    This option has no effect if <application>Privoxy</application>
    has been compiled without keep-alive support, or if it's disabled.
   </para>
  </listitem>
 </varlistentry>
 <varlistentry>
  <term>Notes:</term>
  <listitem>
   <para>
    Note that reusing connections doesn't necessary cause speedups.
    There are also a few privacy implications you should be aware of.
   </para>
   <para>
    If this option is enabled, outgoing connections are shared between
    clients (if there are more than one) and closing the browser that initiated
    the outgoing connection does not affect the connection between &my-app;
    and the server unless the client's request hasn't been completed yet.
   </para>
   <para>
    If the outgoing connection  is idle, it will not be closed until either
    <application>Privoxy's</application> or the server's timeout is reached.
    While it's open, the server knows that the system running &my-app; is still
    there.
   </para>
   <para>
    If there are more than one client (maybe even belonging to multiple users),
    they will be able to reuse each others connections. This is potentially
    dangerous in case of authentication schemes like NTLM where only the
    connection is authenticated, instead of requiring authentication for
    each request.
   </para>
   <para>
    If there is only a single client, and if said client can keep connections
    alive on its own, enabling this option has next to no effect. If the client
    doesn't support connection keep-alive, enabling this option may make sense
    as it allows &my-app; to keep outgoing connections alive even if the client
    itself doesn't support it.
   </para>
   <para>
    You should also be aware that enabling this option increases the likelihood
    of getting the "No server or forwarder data" error message, especially if you
    are using a slow connection to the Internet.
   </para>
   <para>
    This option should only be used by experienced users who
    understand the risks and can weight them against the benefits.
   </para>
  </listitem>
 </varlistentry>
 <varlistentry>
  <term>Example:</term>
  <listitem>
   <para>
    connection-sharing 1
   </para>
  </listitem>
 </varlistentry>
</variablelist>
<![%config-file;[<literallayout>@@#connection-sharing 1</literallayout>]]>
</sect3>


<sect3 renderas="sect4" id="socket-timeout"><title>socket-timeout</title>
<variablelist>
 <varlistentry>
  <term>Specifies:</term>
  <listitem>
   <para>
    Number of seconds after which a socket times out if
    no data is received.
   </para>
  </listitem>
 </varlistentry>
 <varlistentry>
  <term>Type of value:</term>
  <listitem>
   <para>
    <replaceable>Time in seconds.</replaceable>
   </para>
  </listitem>
 </varlistentry>
 <varlistentry>
  <term>Default value:</term>
  <listitem>
   <para>None</para>
  </listitem>
 </varlistentry>
 <varlistentry>
  <term>Effect if unset:</term>
  <listitem>
   <para>
    A default value of 300 seconds is used.
   </para>
  </listitem>
 </varlistentry>
 <varlistentry>
  <term>Notes:</term>
  <listitem>
   <para>
    The default is quite high and you probably want to reduce it.
    If you aren't using an occasionally slow proxy like Tor, reducing
    it to a few seconds should be fine.
   </para>
   <warning>
    <para>
     When a TLS library is being used to read or write data from a socket with
     <literal><ulink url="actions-file.html#HTTPS-INSPECTION">https-inspection</ulink></literal>
     enabled the socket-timeout currently isn't applied and the timeout
     used depends on the library (which may not even use a timeout).
    </para>
   </warning>
  </listitem>
 </varlistentry>
 <varlistentry>
  <term>Example:</term>
  <listitem>
   <para>
    socket-timeout 300
   </para>
  </listitem>
 </varlistentry>
</variablelist>
<![%config-file;[<literallayout>@@socket-timeout 300</literallayout>]]>
</sect3>


<sect3 renderas="sect4" id="max-client-connections"><title>max-client-connections</title>
<variablelist>
 <varlistentry>
  <term>Specifies:</term>
  <listitem>
   <para>
    Maximum number of client connections that will be served.
   </para>
  </listitem>
 </varlistentry>
 <varlistentry>
  <term>Type of value:</term>
  <listitem>
   <para>
    <replaceable>Positive number.</replaceable>
   </para>
  </listitem>
 </varlistentry>
 <varlistentry>
  <term>Default value:</term>
  <listitem>
   <para>128</para>
  </listitem>
 </varlistentry>
 <varlistentry>
  <term>Notes:</term>
  <listitem>
   <para>
    Connections are served until a resource limit is reached.
   </para>
   <para>
    &my-app; creates one thread (or process) for every incoming client
    connection that isn't rejected based on the access control settings.
   </para>
   <para>
    If the system is powerful enough, &my-app; can theoretically deal with
    several hundred (or thousand) connections at the same time, but some
    operating systems enforce resource limits by shutting down offending
    processes and their default limits may be below the ones &my-app; would
    require under heavy load.
   </para>
   <para>
    Configuring &my-app; to enforce a connection limit below the thread
    or process limit used by the operating system makes sure this doesn't
    happen. Simply increasing the operating system's limit would work too,
    but if &my-app; isn't the only application running on the system,
    you may actually want to limit the resources used by &my-app;.
   </para>
   <para>
    If &my-app; is only used by a single trusted user, limiting the
    number of client connections is probably unnecessary. If there
    are multiple possibly untrusted users you probably still want to
    additionally use a packet filter to limit the maximal number of
    incoming connections per client. Otherwise a malicious user could
    intentionally create a high number of connections to prevent other
    users from using &my-app;.
   </para>
   <para>
    Obviously using this option only makes sense if you choose a limit
    below the one enforced by the operating system.
   </para>
   <para>
    One most POSIX-compliant systems &my-app; can't properly deal with
    more than FD_SETSIZE file descriptors if &my-app; has been configured
    to use select() and has to reject connections if the limit is reached.
    When using select() this limit therefore can't be increased without
    recompiling &my-app; with a different FD_SETSIZE limit unless &my-app;
    is running on Windows with _WIN32 defined.
   </para>
   <para>
    When &my-app; has been configured to use poll() the FD_SETSIZE limit
    does not apply.
   </para>
  </listitem>
 </varlistentry>
 <varlistentry>
  <term>Example:</term>
  <listitem>
   <para>
    max-client-connections 256
   </para>
  </listitem>
 </varlistentry>
</variablelist>
<![%config-file;[<literallayout>@@#max-client-connections 256</literallayout>]]>
</sect3>


<sect3 renderas="sect4" id="listen-backlog"><title>listen-backlog</title>
<variablelist>
 <varlistentry>
  <term>Specifies:</term>
  <listitem>
   <para>
    Connection queue length requested from the operating system.
   </para>
  </listitem>
 </varlistentry>
 <varlistentry>
  <term>Type of value:</term>
  <listitem>
   <para>
    <replaceable>Number.</replaceable>
   </para>
  </listitem>
 </varlistentry>
 <varlistentry>
  <term>Default value:</term>
  <listitem>
   <para>128</para>
  </listitem>
 </varlistentry>
 <varlistentry>
  <term>Effect if unset:</term>
  <listitem>
   <para>
    A connection queue length of 128 is requested from the operating system.
   </para>
  </listitem>
 </varlistentry>
 <varlistentry>
  <term>Notes:</term>
  <listitem>
   <para>
    Under high load incoming connection may queue up before Privoxy
    gets around to serve them. The queue length is limited by the
    operating system. Once the queue is full, additional connections
    are dropped before Privoxy can accept and serve them.
   </para>
   <para>
    Increasing the queue length allows Privoxy to accept more
    incoming connections that arrive roughly at the same time.
   </para>
   <para>
    Note that Privoxy can only request a certain queue length,
    whether or not the requested length is actually used depends
    on the operating system which may use a different length instead.
   </para>
   <para>
    On many operating systems a limit of -1 can be specified to
    instruct the operating system to use the maximum queue length
    allowed. Check the listen man page to see if your platform allows this.
   </para>
   <para>
    On some platforms you can use "netstat -Lan -p tcp" to see the effective
    queue length.
   </para>
   <para>
    Effectively using a value above 128 usually requires changing
    the system configuration as well. On FreeBSD-based system the
    limit is controlled by the kern.ipc.soacceptqueue sysctl.
   </para>
  </listitem>
 </varlistentry>
 <varlistentry>
  <term>Example:</term>
  <listitem>
   <para>
    listen-backlog 4096
   </para>
  </listitem>
 </varlistentry>
</variablelist>
<![%config-file;[<literallayout>@@#listen-backlog -1</literallayout>]]>
</sect3>


<sect3 renderas="sect4" id="enable-accept-filter"><title>enable-accept-filter</title>
<variablelist>
 <varlistentry>
  <term>Specifies:</term>
  <listitem>
   <para>
    Whether or not Privoxy should use an accept filter
   </para>
  </listitem>
 </varlistentry>
 <varlistentry>
  <term>Type of value:</term>
  <listitem>
   <para>
    <replaceable>0 or 1</replaceable>
   </para>
  </listitem>
 </varlistentry>
 <varlistentry>
  <term>Default value:</term>
  <listitem>
   <para>0</para>
  </listitem>
 </varlistentry>
 <varlistentry>
  <term>Effect if unset:</term>
  <listitem>
   <para>
    No accept filter is enabled.
   </para>
  </listitem>
 </varlistentry>
 <varlistentry>
  <term>Notes:</term>
  <listitem>
   <para>
    Accept filters reduce the number of context switches by not
    passing sockets for new connections to Privoxy until a complete
    HTTP request is available.
   </para>
   <para>
    As a result, Privoxy can process the whole request right away
    without having to wait for additional data first.
   </para>
   <para>
    For this option to work, Privoxy has to be compiled with
    FEATURE_ACCEPT_FILTER and the operating system has to support
    it (which may require loading a kernel module).
   </para>
   <para>
    Currently accept filters are only supported on FreeBSD-based
    systems. Check the
    <ulink url="https://www.freebsd.org/cgi/man.cgi?query=accf_http">accf_http(9)
     man page</ulink>
    to learn how to enable the support in the operating system.
   </para>
  </listitem>
 </varlistentry>
 <varlistentry>
  <term>Example:</term>
  <listitem>
   <para>
    enable-accept-filter 1
   </para>
  </listitem>
 </varlistentry>
</variablelist>
<![%config-file;[<literallayout>@@#enable-accept-filter 1</literallayout>]]>
</sect3>


<sect3 renderas="sect4" id="handle-as-empty-doc-returns-ok"><title>handle-as-empty-doc-returns-ok</title>
<variablelist>
 <varlistentry>
  <term>Specifies:</term>
  <listitem>
   <para>
    The status code Privoxy returns for pages blocked with
    <!--  URL will only end up in the user manual so the relative link should work. -->
    <literal><ulink url="actions-file.html#HANDLE-AS-EMPTY-DOCUMENT">+handle-as-empty-document</ulink></literal>.
   </para>
  </listitem>
 </varlistentry>
 <varlistentry>
  <term>Type of value:</term>
  <listitem>
   <para>
    <replaceable>0 or 1</replaceable>
   </para>
  </listitem>
 </varlistentry>
 <varlistentry>
  <term>Default value:</term>
  <listitem>
   <para>0</para>
  </listitem>
 </varlistentry>
 <varlistentry>
  <term>Effect if unset:</term>
  <listitem>
   <para>
    Privoxy returns a status 403(forbidden) for all blocked pages.
   </para>
  </listitem>
 </varlistentry>
 <varlistentry>
  <term>Effect if set:</term>
  <listitem>
   <para>
    Privoxy returns a status 200(OK) for pages blocked with +handle-as-empty-document
    and a status 403(Forbidden) for all other blocked pages.
   </para>
  </listitem>
 </varlistentry>
 <varlistentry>
  <term>Notes:</term>
  <listitem>
   <para>
    This directive was added as a work-around for Firefox bug 492459:
    <quote>Websites are no longer rendered if SSL requests for JavaScripts are blocked by a proxy.</quote>
    (<ulink url="https://bugzilla.mozilla.org/show_bug.cgi?id=492459">
                 https://bugzilla.mozilla.org/show_bug.cgi?id=492459</ulink>),
    the bug has been fixed for quite some time, but this directive is also useful
    to make it harder for websites to detect whether or not resources are being
    blocked.
   </para>
  </listitem>
 </varlistentry>
</variablelist>
<![%config-file;[<literallayout>@@#handle-as-empty-doc-returns-ok 1</literallayout>]]>
</sect3>


<sect3 renderas="sect4" id="enable-compression"><title>enable-compression</title>
<variablelist>
 <varlistentry>
  <term>Specifies:</term>
  <listitem>
   <para>
    Whether or not buffered content is compressed before delivery.
   </para>
  </listitem>
 </varlistentry>
 <varlistentry>
  <term>Type of value:</term>
  <listitem>
   <para>
    <replaceable>0 or 1</replaceable>
   </para>
  </listitem>
 </varlistentry>
 <varlistentry>
  <term>Default value:</term>
  <listitem>
   <para>0</para>
  </listitem>
 </varlistentry>
 <varlistentry>
  <term>Effect if unset:</term>
  <listitem>
   <para>
    Privoxy does not compress buffered content.
   </para>
  </listitem>
 </varlistentry>
 <varlistentry>
  <term>Effect if set:</term>
  <listitem>
   <para>
    Privoxy compresses buffered content before delivering it to the client,
    provided the client supports it.
   </para>
  </listitem>
 </varlistentry>
 <varlistentry>
  <term>Notes:</term>
  <listitem>
   <para>
    This directive is only supported if Privoxy has been compiled with
    FEATURE_COMPRESSION, which should not to be confused with FEATURE_ZLIB.
   </para>
   <para>
    Compressing buffered content is mainly useful if Privoxy and the
    client are running on different systems. If they are running on the
    same system, enabling compression is likely to slow things down.
    If you didn't measure otherwise, you should assume that it does
    and keep this option disabled.
   </para>
   <para>
    Privoxy will not compress buffered content below a certain length.
   </para>
  </listitem>
 </varlistentry>
</variablelist>
<![%config-file;[<literallayout>@@#enable-compression 1</literallayout>]]>
</sect3>


<sect3 renderas="sect4" id="compression-level"><title>compression-level</title>
<variablelist>
 <varlistentry>
  <term>Specifies:</term>
  <listitem>
   <para>
    The compression level that is passed to the zlib library when compressing buffered content.
   </para>
  </listitem>
 </varlistentry>
 <varlistentry>
  <term>Type of value:</term>
  <listitem>
   <para>
    <replaceable>Positive number ranging from 0 to 9.</replaceable>
   </para>
  </listitem>
 </varlistentry>
 <varlistentry>
  <term>Default value:</term>
  <listitem>
   <para>1</para>
  </listitem>
 </varlistentry>
 <varlistentry>
  <term>Notes:</term>
  <listitem>
   <para>
     Compressing the data more takes usually longer than compressing
     it less or not compressing it at all. Which level is best depends
     on the connection between Privoxy and the client. If you can't
     be bothered to benchmark it for yourself, you should stick with
     the default and keep compression disabled.
   </para>
   <para>
     If compression is disabled, the compression level is irrelevant.
   </para>
  </listitem>
 </varlistentry>
 <varlistentry>
  <term>Examples:</term>
  <listitem>
    <screen>
# Best speed (compared to the other levels)
compression-level 1

# Best compression
compression-level 9

# No compression. Only useful for testing as the added header
# slightly increases the amount of data that has to be sent.
# If your benchmark shows that using this compression level
# is superior to using no compression at all, the benchmark
# is likely to be flawed.
compression-level 0
</screen>
  </listitem>
 </varlistentry>
</variablelist>
<![%config-file;[<literallayout>@@#compression-level 1</literallayout>]]>
</sect3>


<sect3 renderas="sect4" id="client-header-order"><title>client-header-order</title>
<variablelist>
 <varlistentry>
  <term>Specifies:</term>
  <listitem>
   <para>
    The order in which client headers are sorted before forwarding them.
   </para>
  </listitem>
 </varlistentry>
 <varlistentry>
  <term>Type of value:</term>
  <listitem>
   <para>
    <replaceable>Client header names delimited by spaces or tabs</replaceable>
   </para>
  </listitem>
 </varlistentry>
 <varlistentry>
  <term>Default value:</term>
  <listitem>
   <para>None</para>
  </listitem>
 </varlistentry>
 <varlistentry>
  <term>Notes:</term>
  <listitem>
   <para>
     By default &my-app; leaves the client headers in the order they
     were sent by the client. Headers are modified in-place, new headers
     are added at the end of the already existing headers.
   </para>
   <para>
     The header order can be used to fingerprint client requests
     independently of other headers like the User-Agent.
   </para>
   <para>
     This directive allows to sort the headers differently to better
     mimic a different User-Agent. Client headers will be emitted
     in the order given, headers whose name isn't explicitly specified
     are added at the end.
   </para>
   <para>
     Note that sorting headers in an uncommon way will make fingerprinting
     actually easier.
     Encrypted headers are not affected by this directive unless
     <literal><ulink url="actions-file.html#HTTPS-INSPECTION">https-inspection</ulink></literal>
     is enabled.
   </para>
  </listitem>
 </varlistentry>
</variablelist>
<![%config-file;[<literallayout>@@#client-header-order Host \
 User-Agent \
 Accept \
 Accept-Language \
 Accept-Encoding \
 Proxy-Connection \
 Referer \
 Cookie \
 DNT \
 Connection \
 Pragma \
 Upgrade-Insecure-Requests \
 If-Modified-Since \
 Cache-Control \
 Content-Length \
 Origin \
 Content-Type
</literallayout>]]>
</sect3>


<sect3 renderas="sect4" id="client-specific-tag"><title>client-specific-tag</title>
<variablelist>
 <varlistentry>
  <term>Specifies:</term>
  <listitem>
   <para>
    The name of a tag that will always be set for clients that
    requested it through the webinterface.
   </para>
  </listitem>
 </varlistentry>
 <varlistentry>
  <term>Type of value:</term>
  <listitem>
   <para>
    <replaceable>Tag name followed by a description that will be shown in the webinterface</replaceable>
   </para>
  </listitem>
 </varlistentry>
 <varlistentry>
  <term>Default value:</term>
  <listitem>
   <para>None</para>
  </listitem>
 </varlistentry>
 <varlistentry>
  <term>Notes:</term>
  <listitem>
   <para>
    Client-specific tags allow Privoxy admins to create different
    profiles and let the users chose which one they want without
    impacting other users.
   </para>
   <para>
    One use case is allowing users to circumvent certain blocks
    without having to allow them to circumvent all blocks.
    This is not possible with the
    <link linkend="enable-remote-toggle">enable-remote-toggle feature</link>
    because it would bluntly disable all blocks for all users and also affect
    other actions like filters.
    It also is set globally which renders it useless in most multi-user setups.
   </para>
   <para>
    After a client-specific tag has been defined with the client-specific-tag
    directive, action sections can be activated based on the tag by using a
    <ulink url="actions-file.html#CLIENT-TAG-PATTERN">CLIENT-TAG</ulink> pattern.
    The CLIENT-TAG pattern is evaluated at the same priority
    as URL patterns, as a result the last matching pattern wins.
    Tags that are created based on client or server headers are evaluated
    later on and can overrule CLIENT-TAG and URL patterns!
   </para>
   <para>
    The tag is set for all requests that come from clients that requested
    it to be set.
    Note that "clients" are  differentiated by IP address,
    if the IP address changes the tag has to be requested again.
   </para>
   <para>
    Clients can request tags to be set by using the CGI interface <ulink
     url="http://config.privoxy.org/client-tags">http://config.privoxy.org/client-tags</ulink>.
    The specific tag description is only used on the web page and should
    be phrased in away that the user understands the effect of the tag.
   </para>
  </listitem>
 </varlistentry>
 <varlistentry>
  <term>Examples:</term>
  <listitem>
    <screen>
  # Define a couple of tags, the described effect requires action sections
  # that are enabled based on CLIENT-TAG patterns.
  client-specific-tag circumvent-blocks Overrule blocks but do not affect other actions
  client-specific-tag disable-content-filters Disable content-filters but do not affect other actions
  client-specific-tag overrule-redirects Overrule redirect sections
  client-specific-tag allow-cookies Do not crunch cookies in either direction
  client-specific-tag change-tor-socks-port Change forward-socks5 settings to use a different Tor socks port (and circuits)
  client-specific-tag no-https-inspection Disable HTTPS inspection
  client-specific-tag no-tls-verification Don't verify certificates when http-inspection is enabled
</screen>
  </listitem>
 </varlistentry>
</variablelist>
</sect3>

<!--  ~  End section  ~  -->

<sect3 renderas="sect4" id="client-tag-lifetime"><title>client-tag-lifetime</title>
<variablelist>
 <varlistentry>
  <term>Specifies:</term>
  <listitem>
   <para>
    How long a temporarily enabled tag remains enabled.
   </para>
  </listitem>
 </varlistentry>
 <varlistentry>
  <term>Type of value:</term>
  <listitem>
   <para>
    <replaceable>Time in seconds.</replaceable>
   </para>
  </listitem>
 </varlistentry>
 <varlistentry>
  <term>Default value:</term>
  <listitem>
   <para>60</para>
  </listitem>
 </varlistentry>
 <varlistentry>
  <term>Notes:</term>
  <listitem>
   <para>
    In case of some tags users may not want to enable them permanently,
    but only for a short amount of time, for example to circumvent a block
    that is the result of an overly-broad URL pattern.
   </para>
   <para>
    The CGI interface <ulink
     url="http://config.privoxy.org/client-tags">http://config.privoxy.org/client-tags</ulink>
    therefore provides a "enable this tag temporarily" option.
    If it is used, the tag will be set until the client-tag-lifetime
    is over.
   </para>
  </listitem>
 </varlistentry>
 <varlistentry>
  <term>Example:</term>
  <listitem>
    <screen>
    # Increase the time to life for temporarily enabled tags to 3 minutes
    client-tag-lifetime 180
</screen>
  </listitem>
 </varlistentry>
</variablelist>
</sect3>

<!--  ~  End section  ~  -->

<sect3 renderas="sect4" id="trust-x-forwarded-for"><title>trust-x-forwarded-for</title>
<variablelist>
 <varlistentry>
  <term>Specifies:</term>
  <listitem>
   <para>
    Whether or not Privoxy should use IP addresses specified with the X-Forwarded-For header
   </para>
  </listitem>
 </varlistentry>
 <varlistentry>
  <term>Type of value:</term>
  <listitem>
   <para>
    <replaceable>0 or one</replaceable>
   </para>
  </listitem>
 </varlistentry>
 <varlistentry>
  <term>Default value:</term>
  <listitem>
   <para>0</para>
  </listitem>
 </varlistentry>
 <varlistentry>
  <term>Notes:</term>
  <listitem>
   <para>
    If clients reach Privoxy through another proxy, for example a load
    balancer, Privoxy can't tell the client's IP address from the connection.
    If multiple clients use the same proxy, they will share the same
    client tag settings which is usually not desired.
   </para>
   <para>
    This option lets Privoxy use the X-Forwarded-For header value as
    client IP address. If the proxy sets the header, multiple clients
    using the same proxy do not share the same client tag settings.
   </para>
   <para>
    This option should only be enabled if Privoxy can only be reached
    through a proxy and if the proxy can be trusted to set the header
    correctly. It is recommended that ACL are used to make sure only
    trusted systems can reach Privoxy.
   </para>
   <para>
    If access to Privoxy isn't limited to trusted systems, this option
    would allow malicious clients to change the client tags for other
    clients or increase Privoxy's memory requirements by registering
    lots of client tag settings for clients that don't exist.
   </para>
  </listitem>
 </varlistentry>
 <varlistentry>
  <term>Example:</term>
  <listitem>
    <screen>
    # Allow systems that can reach Privoxy to provide the client
    # IP address with a X-Forwarded-For header.
    trust-x-forwarded-for 1
</screen>
  </listitem>
 </varlistentry>
</variablelist>
</sect3>

<!--  ~  End section  ~  -->

<!--   ~~~~~       New section      ~~~~~     -->

<sect3 renderas="sect4" id="receive-buffer-size"><title>receive-buffer-size</title>
<variablelist>
 <varlistentry>
  <term>Specifies:</term>
  <listitem>
   <para>
    The size of the buffer Privoxy uses to receive data from the server.
   </para>
  </listitem>
 </varlistentry>
 <varlistentry>
  <term>Type of value:</term>
  <listitem>
   <para>
    <replaceable>Size in bytes</replaceable>
   </para>
  </listitem>
 </varlistentry>
 <varlistentry>
  <term>Default value:</term>
  <listitem>
   <para>5000</para>
  </listitem>
 </varlistentry>
 <varlistentry>
  <term>Notes:</term>
  <listitem>
   <para>
    Increasing the receive-buffer-size increases Privoxy's memory usage but
    can lower the number of context switches and thereby reduce the
    cpu usage and potentially increase the throughput.
   </para>
   <para>
    This is mostly relevant for fast network connections and
    large downloads that don't require filtering.
   </para>
   <para>
    Reducing the buffer size reduces the amount of memory Privoxy
    needs to handle the request but increases the number of systemcalls
    and may reduce the throughput.
   </para>
   <para>
    A dtrace command like:
    <quote>sudo dtrace -n 'syscall::read:return /execname == "privoxy"/ { @[execname] = llquantize(arg0, 10, 0, 5, 20); @m = max(arg0)}'</quote>
    can be used to properly tune the receive-buffer-size.
    On systems without dtrace, strace or truss may be used as
    less convenient alternatives.
   </para>
   <para>
    If the buffer is too large it will increase Privoxy's memory
    footprint without any benefit. As the memory is (currently)
    cleared before using it, a buffer that is too large can
    actually reduce the throughput.
   </para>
  </listitem>
 </varlistentry>
 <varlistentry>
  <term>Example:</term>
  <listitem>
    <screen>
    # Increase the receive buffer size
    receive-buffer-size 32768
</screen>
  </listitem>
 </varlistentry>
</variablelist>
</sect3>

<!--  ~  End section  ~  -->

</sect2>


<sect2 id="https-inspection-directives">
<title>HTTPS Inspection</title>

<para>
  HTTPS inspection allows to filter encrypted requests and responses.
  This is only supported when <application>Privoxy</application>
  has been built with FEATURE_HTTPS_INSPECTION.
  If you aren't sure if your version supports it, have a look at
  <ulink url="http://config.privoxy.org/show-status">http://config.privoxy.org/show-status</ulink>.
</para>

<!--   ~~~~~       New section      ~~~~~     -->

<sect3 renderas="sect4" id="ca-directory"><title>ca-directory</title>
<variablelist>
 <varlistentry>
  <term>Specifies:</term>
  <listitem>
   <para>
    Directory with the CA key, the CA certificate and the trusted CAs file.
   </para>
  </listitem>
 </varlistentry>
 <varlistentry>
  <term>Type of value:</term>
  <listitem>
   <para>
    Text
   </para>
  </listitem>
 </varlistentry>
 <varlistentry>
  <term>Default value:</term>
  <listitem>
   <para><emphasis>./CA</emphasis></para>
  </listitem>
 </varlistentry>
 <varlistentry>
  <term>Effect if unset:</term>
  <listitem>
   <para>
    Default value is used.
   </para>
  </listitem>
 </varlistentry>
 <varlistentry>
  <term>Notes:</term>
  <listitem>
   <para>
    This directive specifies the directory where the
    CA key, the CA certificate and the trusted CAs file
    are located.
   </para>
   <para>
    The permissions should only let &my-app; and the  &my-app;
    admin access the directory.
   </para>
  </listitem>
 </varlistentry>
 <varlistentry>
  <term>Example:</term>
  <listitem>
   <para>
    ca-directory /usr/local/etc/privoxy/CA
   </para>
  </listitem>
 </varlistentry>
</variablelist>
<![%config-file;[<literallayout>@@#ca-directory /usr/local/etc/privoxy/CA</literallayout>]]>
</sect3>

<!--  ~  End section  ~  -->

<!--   ~~~~~       New section      ~~~~~     -->

<sect3 renderas="sect4" id="ca-cert-file"><title>ca-cert-file</title>
<variablelist>
 <varlistentry>
  <term>Specifies:</term>
  <listitem>
   <para>
    The CA certificate file in ".crt" format.
   </para>
  </listitem>
 </varlistentry>
 <varlistentry>
  <term>Type of value:</term>
  <listitem>
   <para>
    Text
   </para>
  </listitem>
 </varlistentry>
 <varlistentry>
  <term>Default value:</term>
  <listitem>
   <para><emphasis>cacert.crt</emphasis></para>
  </listitem>
 </varlistentry>
 <varlistentry>
  <term>Effect if unset:</term>
  <listitem>
   <para>
    Default value is used.
   </para>
  </listitem>
 </varlistentry>
 <varlistentry>
  <term>Notes:</term>
  <listitem>
   <para>
    This directive specifies the name of the CA certificate file
    in ".crt" format.
   </para>
   <para>
    The file is used by &my-app; to generate website certificates
    when https inspection is enabled with the
    <literal><ulink url="actions-file.html#HTTPS-INSPECTION">https-inspection</ulink></literal>
    action.
   </para>
   <para>
    &my-app; clients should import the certificate so that they
    can validate the generated certificates.
   </para>
   <para>
    The file can be generated with:
    <command>openssl req -new -x509 -extensions v3_ca -keyout cakey.pem -out cacert.crt -days 3650</command>
   </para>
  </listitem>
 </varlistentry>
 <varlistentry>
  <term>Example:</term>
  <listitem>
   <para>
    ca-cert-file root.crt
   </para>
  </listitem>
 </varlistentry>
</variablelist>
<![%config-file;[<literallayout>@@#ca-cert-file cacert.crt</literallayout>]]>
</sect3>

<!--  ~  End section  ~  -->

<!--   ~~~~~       New section      ~~~~~     -->

<sect3 renderas="sect4" id="ca-key-file"><title>ca-key-file</title>
<variablelist>
 <varlistentry>
  <term>Specifies:</term>
  <listitem>
   <para>
    The CA key file in ".pem" format.
   </para>
  </listitem>
 </varlistentry>
 <varlistentry>
  <term>Type of value:</term>
  <listitem>
   <para>
    Text
   </para>
  </listitem>
 </varlistentry>
 <varlistentry>
  <term>Default value:</term>
  <listitem>
   <para><emphasis>cacert.pem</emphasis></para>
  </listitem>
 </varlistentry>
 <varlistentry>
  <term>Effect if unset:</term>
  <listitem>
   <para>
    Default value is used.
   </para>
  </listitem>
 </varlistentry>
 <varlistentry>
  <term>Notes:</term>
  <listitem>
   <para>
    This directive specifies the name of the CA key file in ".pem" format.
    The <ulink url="#CA-CERT-FILE">ca-cert-file section</ulink> contains
    a command to generate it.
   </para>
   <para>
    The CA key is used by &my-app; to sign generated certificates.
   </para>
   <para>
    Access to the key should be limited to Privoxy.
   </para>
  </listitem>
 </varlistentry>
 <varlistentry>
  <term>Example:</term>
  <listitem>
   <para>
    ca-key-file cakey.pem
   </para>
  </listitem>
 </varlistentry>
</variablelist>
<![%config-file;[<literallayout>@@#ca-key-file cakey.pem</literallayout>]]>
</sect3>

<!--  ~  End section  ~  -->

<!--   ~~~~~       New section      ~~~~~     -->

<sect3 renderas="sect4" id="ca-password"><title>ca-password</title>
<variablelist>
 <varlistentry>
  <term>Specifies:</term>
  <listitem>
   <para>
    The password for the CA keyfile.
   </para>
  </listitem>
 </varlistentry>
 <varlistentry>
  <term>Type of value:</term>
  <listitem>
   <para>
    Text
   </para>
  </listitem>
 </varlistentry>
 <varlistentry>
  <term>Default value:</term>
  <listitem>
   <para><emphasis>Empty string</emphasis></para>
  </listitem>
 </varlistentry>
 <varlistentry>
  <term>Effect if unset:</term>
  <listitem>
   <para>
    Default value is used.
   </para>
  </listitem>
 </varlistentry>
 <varlistentry>
  <term>Notes:</term>
  <listitem>
   <para>
    This directive specifies the password for the CA keyfile
    that is used when Privoxy generates certificates for intercepted
    requests.
   </para>
   <warning>
   <para>
     Note that the password is shown on the CGI page so don't
     reuse an important one.
   </para>
   <para>
     If disclosure of the password is a compliance issue consider blocking
     the relevant CGI requests after enabling the <link linkend="enforce-blocks">enforce-blocks</link>
     and <link linkend="allow-cgi-request-crunching">allow-cgi-request-crunching</link>.
   </para>
   </warning>
  </listitem>
 </varlistentry>
 <varlistentry>
  <term>Example:</term>
  <listitem>
   <para>
    ca-password blafasel
   </para>
  </listitem>
 </varlistentry>
</variablelist>
<![%config-file;[<literallayout>@@#ca-password swordfish</literallayout>]]>
</sect3>

<!--  ~  End section  ~  -->

<!--   ~~~~~       New section      ~~~~~     -->

<sect3 renderas="sect4" id="certificate-directory"><title>certificate-directory</title>
<variablelist>
 <varlistentry>
  <term>Specifies:</term>
  <listitem>
   <para>
    Directory to save generated keys and certificates.
   </para>
  </listitem>
 </varlistentry>
 <varlistentry>
  <term>Type of value:</term>
  <listitem>
   <para>
    Text
   </para>
  </listitem>
 </varlistentry>
 <varlistentry>
  <term>Default value:</term>
  <listitem>
   <para><emphasis>./certs</emphasis></para>
  </listitem>
 </varlistentry>
 <varlistentry>
  <term>Effect if unset:</term>
  <listitem>
   <para>
    Default value is used.
   </para>
  </listitem>
 </varlistentry>
 <varlistentry>
  <term>Notes:</term>
  <listitem>
   <para>
    This directive specifies the directory where generated
    TLS/SSL keys and certificates are saved when https inspection
    is enabled with the
    <literal><ulink url="actions-file.html#HTTPS-INSPECTION">https-inspection</ulink></literal>
    action.
   </para>
   <para>
    The keys and certificates currently have to be deleted manually
    when changing the <ulink url="#CA-CERT-FILE">ca-cert-file</ulink>
    and the <ulink url="#CA-CERT-KEY">ca-cert-key</ulink>.
   </para>
   <para>
    The permissions should only let &my-app; and the &my-app;
    admin access the directory.
   </para>
   <warning>
    <para>
     &my-app; currently does not garbage-collect obsolete keys
     and certificates and does not keep track of how may keys
     and certificates exist.
    </para>
    <para>
     &my-app; admins should monitor the size of the directory
     and/or make sure there is sufficient space available.
     A cron job to limit the number of keys and certificates
     to a certain number may be worth considering.
    </para>
   </warning>
  </listitem>
 </varlistentry>
 <varlistentry>
  <term>Example:</term>
  <listitem>
   <para>
    certificate-directory /usr/local/var/privoxy/certs
   </para>
  </listitem>
 </varlistentry>
</variablelist>
<![%config-file;[<literallayout>@@#certificate-directory /usr/local/var/privoxy/certs</literallayout>]]>
</sect3>

<!--  ~  End section  ~  -->

<!--   ~~~~~       New section      ~~~~~     -->

<sect3 renderas="sect4" id="cipher-list"><title>cipher-list</title>
<variablelist>
 <varlistentry>
  <term>Specifies:</term>
  <listitem>
   <para>
    A list of ciphers to use in TLS handshakes
   </para>
  </listitem>
 </varlistentry>
 <varlistentry>
  <term>Type of value:</term>
  <listitem>
   <para>
    Text
   </para>
  </listitem>
 </varlistentry>
 <varlistentry>
  <term>Default value:</term>
  <listitem>
   <para>None</para>
  </listitem>
 </varlistentry>
 <varlistentry>
  <term>Effect if unset:</term>
  <listitem>
   <para>
    A default value is inherited from the TLS library.
   </para>
  </listitem>
 </varlistentry>
 <varlistentry>
  <term>Notes:</term>
  <listitem>
   <para>
    This directive allows to specify a non-default list of ciphers to use
    in TLS handshakes with clients and servers.
   </para>
   <para>
    Ciphers are separated by colons. Which ciphers are supported
    depends on the TLS library. When using OpenSSL, unsupported ciphers
    are skipped. When using MbedTLS they are rejected.
   </para>
   <warning>
    <para>
     Specifying an unusual cipher list makes fingerprinting easier.
     Note that the default list provided by the TLS library may
     be unusual when compared to the one used by modern browsers
     as well.
    </para>
   </warning>
  </listitem>
 </varlistentry>
 <varlistentry>
  <term>Examples:</term>
  <listitem>
   <screen>
  # Explicitly set a couple of ciphers with names used by MbedTLS
cipher-list cipher-list TLS-ECDHE-RSA-WITH-CHACHA20-POLY1305-SHA256:\
TLS-ECDHE-ECDSA-WITH-CHACHA20-POLY1305-SHA256:\
TLS-DHE-RSA-WITH-CHACHA20-POLY1305-SHA256:\
TLS-ECDHE-ECDSA-WITH-AES-128-GCM-SHA256:\
TLS-ECDHE-ECDSA-WITH-AES-256-GCM-SHA384:\
TLS-ECDHE-ECDSA-WITH-AES-256-CCM:\
TLS-ECDHE-ECDSA-WITH-AES-256-CCM-8:\
TLS-ECDHE-ECDSA-WITH-AES-128-CCM:\
TLS-ECDHE-ECDSA-WITH-AES-128-CCM-8:\
TLS-ECDHE-ECDSA-WITH-CAMELLIA-128-GCM-SHA256:\
TLS-ECDHE-ECDSA-WITH-CAMELLIA-256-GCM-SHA384:\
TLS-ECDHE-RSA-WITH-AES-128-GCM-SHA256:\
TLS-ECDHE-RSA-WITH-AES-256-GCM-SHA384:\
TLS-ECDHE-RSA-WITH-CAMELLIA-128-GCM-SHA256:\
TLS-ECDHE-RSA-WITH-CAMELLIA-256-GCM-SHA384:\
TLS-DHE-RSA-WITH-AES-256-GCM-SHA384:\
TLS-DHE-RSA-WITH-AES-128-GCM-SHA256:\
TLS-DHE-RSA-WITH-AES-256-CCM:\
TLS-DHE-RSA-WITH-AES-256-CCM-8:\
TLS-DHE-RSA-WITH-AES-128-CCM:\
TLS-DHE-RSA-WITH-AES-128-CCM-8:\
TLS-DHE-RSA-WITH-CAMELLIA-128-GCM-SHA256:\
TLS-DHE-RSA-WITH-CAMELLIA-256-GCM-SHA384:\
TLS-ECDH-RSA-WITH-AES-128-GCM-SHA256:\
TLS-ECDH-RSA-WITH-AES-256-GCM-SHA384:\
TLS-ECDH-RSA-WITH-CAMELLIA-128-GCM-SHA256:\
TLS-ECDH-RSA-WITH-CAMELLIA-256-GCM-SHA384:\
TLS-ECDH-ECDSA-WITH-AES-128-GCM-SHA256:\
TLS-ECDH-ECDSA-WITH-AES-256-GCM-SHA384:\
TLS-ECDH-ECDSA-WITH-CAMELLIA-128-GCM-SHA256:\
TLS-ECDH-ECDSA-WITH-CAMELLIA-256-GCM-SHA384
</screen>
   <screen>
  # Explicitly set a couple of ciphers with names used by OpenSSL
cipher-list ECDHE-RSA-AES256-GCM-SHA384:\
ECDHE-ECDSA-AES256-GCM-SHA384:\
DH-DSS-AES256-GCM-SHA384:\
DHE-DSS-AES256-GCM-SHA384:\
DH-RSA-AES256-GCM-SHA384:\
DHE-RSA-AES256-GCM-SHA384:\
ECDH-RSA-AES256-GCM-SHA384:\
ECDH-ECDSA-AES256-GCM-SHA384:\
ECDHE-RSA-AES128-GCM-SHA256:\
ECDHE-ECDSA-AES128-GCM-SHA256:\
DH-DSS-AES128-GCM-SHA256:\
DHE-DSS-AES128-GCM-SHA256:\
DH-RSA-AES128-GCM-SHA256:\
DHE-RSA-AES128-GCM-SHA256:\
ECDH-RSA-AES128-GCM-SHA256:\
ECDH-ECDSA-AES128-GCM-SHA256:\
ECDHE-RSA-AES256-GCM-SHA384:\
AES128-SHA
</screen>
   <screen>
  # Use keywords instead of explicitly naming the ciphers (Does not work with MbedTLS)
cipher-list ALL:!EXPORT:!EXPORT40:!EXPORT56:!aNULL:!LOW:!RC4:@STRENGTH
</screen>
  </listitem>
 </varlistentry>
</variablelist>
</sect3>

<!--  ~  End section  ~  -->

<!--   ~~~~~       New section      ~~~~~     -->

<sect3 renderas="sect4" id="trusted-cas-file"><title>trusted-cas-file</title>
<variablelist>
 <varlistentry>
  <term>Specifies:</term>
  <listitem>
   <para>
    The trusted CAs file in ".pem" format.
   </para>
  </listitem>
 </varlistentry>
 <varlistentry>
  <term>Type of value:</term>
  <listitem>
   <para>
    File name relative to ca-directory
   </para>
  </listitem>
 </varlistentry>
 <varlistentry>
  <term>Default value:</term>
  <listitem>
   <para><emphasis>trustedCAs.pem</emphasis></para>
  </listitem>
 </varlistentry>
 <varlistentry>
  <term>Effect if unset:</term>
  <listitem>
   <para>
    Default value is used.
   </para>
  </listitem>
 </varlistentry>
 <varlistentry>
  <term>Notes:</term>
  <listitem>
   <para>
    This directive specifies the trusted CAs file that is used when validating
    certificates for intercepted TLS/SSL requests.
   </para>
   <para>
    An example file can be downloaded from
    <ulink url="https://curl.se/ca/cacert.pem">https://curl.se/ca/cacert.pem</ulink>.
    If you want to create the file yourself, please see:
    <ulink url="https://curl.se/docs/caextract.html">https://curl.se/docs/caextract.html</ulink>.
   </para>
  </listitem>
 </varlistentry>
 <varlistentry>
  <term>Example:</term>
  <listitem>
   <para>
    trusted-cas-file trusted_cas_file.pem
   </para>
  </listitem>
 </varlistentry>
</variablelist>
<![%config-file;[<literallayout>@@#trusted-cas-file trustedCAs.pem</literallayout>]]>
</sect3>

<!--  ~  End section  ~  -->

</sect2>

<!--   ~~~~~       New section      ~~~~~     -->

<sect2 id="windows-gui">
<title>Windows GUI Options</title>
<para>
 <application>Privoxy</application> has a number of options specific to the
 Windows GUI interface:
</para>

<anchor id="activity-animation">
<![%config-file;[<para>@@</para>]]> <!-- for spacing -->
<para>
 If <quote>activity-animation</quote> is set to 1, the
 <application>Privoxy</application> icon will animate when
 <quote>Privoxy</quote> is active. To turn off, set to 0.
</para>

<![%config-file;[<literallayout>@@#activity-animation   1</literallayout>]]>
<![%user-man;[
   <literallayout>
  <emphasis>activity-animation   1</emphasis>
</literallayout>
]]>

<anchor id="log-messages">
<![%config-file;[<para>@@</para>]]> <!-- for spacing -->
<para>
 If <quote>log-messages</quote> is set to 1,
 <application>Privoxy</application> copies log messages to the console
 window.
 The log detail depends on the <link linkend="debug">debug</link> directive.
</para>

<![%config-file;[<literallayout>@@#log-messages   1</literallayout>]]>
<![%user-man;[
   <literallayout>
  <emphasis>log-messages       1</emphasis>
</literallayout>
]]>

<anchor id="log-buffer-size">
<![%config-file;[<para>@@</para>]]> <!-- for spacing -->
<para>
 If <quote>log-buffer-size</quote> is set to 1, the size of the log buffer,
 i.e. the amount of memory used for the log messages displayed in the
 console window, will be limited to <quote>log-max-lines</quote> (see below).
</para>

<para>
 Warning: Setting this to 0 will result in the buffer to grow infinitely and
 eat up all your memory!
</para>

<![%config-file;[<literallayout>@@#log-buffer-size 1</literallayout>]]>
<![%user-man;[
   <literallayout>
  <emphasis>log-buffer-size      1</emphasis>
</literallayout>
]]>

<anchor id="log-max-lines">
<![%config-file;[<para>@@</para>]]> <!-- for spacing -->
<para>
 <application>log-max-lines</application> is the maximum number of lines held
 in the log buffer. See above.
</para>

<![%config-file;[<literallayout>@@#log-max-lines 200</literallayout>]]>
<![%user-man;[
   <literallayout>
  <emphasis>log-max-lines      200</emphasis>
</literallayout>
]]>

<anchor id="log-highlight-messages">
<![%config-file;[<para>@@</para>]]> <!-- for spacing -->
<para>
 If <quote>log-highlight-messages</quote> is set to 1,
 <application>Privoxy</application> will highlight portions of the log
 messages with a bold-faced font:
</para>

<![%config-file;[<literallayout>@@#log-highlight-messages 1</literallayout>]]>
<![%user-man;[
   <literallayout>
  <emphasis>log-highlight-messages   1</emphasis>
</literallayout>
]]>

<anchor id="log-font-name">
<![%config-file;[<para>@@</para>]]> <!-- for spacing -->
<para>
 The font used in the console window:
</para>

<![%config-file;[<literallayout>@@#log-font-name Comic Sans MS</literallayout>]]>
<![%user-man;[
   <literallayout>
  <emphasis>log-font-name        Comic Sans MS</emphasis>
</literallayout>
]]>

<anchor id="log-font-size">
<![%config-file;[<para>@@</para>]]> <!-- for spacing -->
<para>
 Font size used in the console window:
</para>

<![%config-file;[<literallayout>@@#log-font-size 8</literallayout>]]>
<![%user-man;[
   <literallayout>
  <emphasis>log-font-size        8</emphasis>
</literallayout>
]]>

<anchor id="show-on-task-bar">
<![%config-file;[<para>@@</para>]]> <!-- for spacing -->
<para>
 <quote>show-on-task-bar</quote> controls whether or not
 <application>Privoxy</application> will appear as a button on the Task bar
 when minimized:
</para>

<![%config-file;[<literallayout>@@#show-on-task-bar 0</literallayout>]]>
<![%user-man;[
   <literallayout>
  <emphasis>show-on-task-bar     0</emphasis>
</literallayout>
]]>

<anchor id="close-button-minimizes">
<![%config-file;[<para>@@</para>]]> <!-- for spacing -->
<para>
 If <quote>close-button-minimizes</quote> is set to 1, the Windows close
 button will minimize <application>Privoxy</application> instead of closing
 the program (close with the exit option on the File menu).
</para>

<![%config-file;[<literallayout>@@#close-button-minimizes 1</literallayout>]]>
<![%user-man;[
   <literallayout>
  <emphasis>close-button-minimizes  1</emphasis>
</literallayout>
]]>

<anchor id="hide-console">
<![%config-file;[<para>@@</para>]]> <!-- for spacing -->
<para>
 The <quote>hide-console</quote> option is specific to the MS-Win console
 version of <application>Privoxy</application>. If this option is used,
 <application>Privoxy</application> will disconnect from and hide the
 command console.
</para>

<![%config-file;[<literallayout>@@#hide-console</literallayout>]]>
<![%user-man;[
   <literallayout>
  #<emphasis>hide-console</emphasis>
</literallayout>
]]>

</sect2>
</sect1>

<!-- end config content common to both outputs -->

<![%config-file;[
<!-- These are dummy anchors to keep the processor quiet            -->
<!-- when building config-file only (ie. they are used in u-m only) -->
<sect1 label="">
<title></title>
<anchor id="filter">
<anchor id="filter-file">
<anchor id="regex">
<anchor id="actions-file">
<anchor id="af-patterns">
</sect1>
]]>

<!-- eof p-config.sgml -->
