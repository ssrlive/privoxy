<testcase>
<info>
<keywords>
HTTPS
HTTP POST
client-body-tagger
</keywords>
</info>

<reply>
<data>
HTTP/1.1 200 OK
Connection: close
Content-Type: text/html
X-Connection: swsclose

Received your input.
</data>
</reply>

<proxy-reply>
<data>
HTTP/1.1 200 Connection established

HTTP/1.1 200 OK
Connection: close
Content-Type: text/html
X-Connection: swsclose

Received your input.
</data>
</proxyreply>

<client>
<server>
https
</server>
<name>
Two requests to the same URL. The second one is a POST request with an offending word but it's too large to buffer and tag so it gets to pass. (XXX: Privoxy could execute the tagger based on the data that fits into the buffer)
</name>
<features>
proxy
</features>
<command>
-s --write-out '%{stderr}%{response_code}\n' --insecure https://%HOSTIP:%HTTPSPORT/%TESTNUMBER --next -d @log/post-data-%TESTNUMBER -s --write-out '%{stderr}%{response_code}\n' --insecure https://%HOSTIP:%HTTPSPORT/%TESTNUMBER
</command>
<file name="log/post-data-%TESTNUMBER">
blafasel%repeat[20000 x padding]%
</file>
</client>

<verify>
<protocol nonewline="yes">
GET /%TESTNUMBER HTTP/1.1
Host: %HOSTIP:%HTTPSPORT
User-Agent: curl/%VERSION
Accept: */*

POST /%TESTNUMBER HTTP/1.1
Host: %HOSTIP:%HTTPSPORT
User-Agent: curl/%VERSION
Accept: */*
Content-Length: 140008
Content-Type: application/x-www-form-urlencoded

blafasel%repeat[20000 x padding]%
</protocol>
<stderr>
200
200
</stderr>

</verify>
</testcase>
